{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{\"+uFs\":function(t,e,o){\"use strict\";o.r(e),o.d(e,\"AddonModGlossaryEditPageModule\",(function(){return B}));var i=o(\"mrSG\"),n=o(\"3Pt+\"),a=o(\"93ts\"),s=o(\"baaQ\"),d=o(\"hSQQ\"),c=o(\"pHTc\"),r=o(\"9+EE\"),l=o(\"3LXp\"),h=o(\"vuGA\"),g=o(\"bFG1\"),m=o(\"j3ag\"),u=o(\"fjkH\"),y=o(\"4reR\"),p=o(\"fcHg\"),f=o(\"1VuZ\"),_=o(\"gjmY\"),v=o(\"BZ3K\"),E=o(\"7DS8\"),M=o(\"fXoL\"),b=o(\"tyNb\"),I=o(\"46ml\"),P=o(\"TEn/\"),D=o(\"ofXK\"),C=o(\"nt/U\"),O=o(\"OZH1\"),A=o(\"PgjG\"),w=o(\"hMzs\"),G=o(\"N5Lt\"),k=o(\"d0nH\"),T=o(\"M9y5\"),x=o(\"ACYt\"),S=o(\"sYmb\");const V=[\"editFormEl\"];function AddonModGlossaryEditPage_h1_6_Template(t,e){if(1&t&&(M.Ec(0,\"h1\"),M.zc(1,\"core-format-text\",5),M.Dc()),2&t){const t=M.Oc();M.lc(1),M.Vc(\"text\",t.glossary.name)(\"contextInstanceId\",t.cmId)(\"courseId\",t.courseId)}}function AddonModGlossaryEditPage_form_9_ion_item_14_ion_select_option_7_Template(t,e){if(1&t&&(M.Ec(0,\"ion-select-option\",17),M.pd(1),M.Dc()),2&t){const t=e.$implicit;M.Vc(\"value\",t.id),M.lc(1),M.rd(\" \",t.name,\" \")}}const _c1=function(t){return{header:t}};function AddonModGlossaryEditPage_form_9_ion_item_14_Template(t,e){if(1&t){const t=M.Fc();M.Ec(0,\"ion-item\"),M.Ec(1,\"ion-label\",14),M.pd(2),M.Pc(3,\"translate\"),M.Dc(),M.Ec(4,\"ion-select\",15),M.Mc(\"ngModelChange\",(function AddonModGlossaryEditPage_form_9_ion_item_14_Template_ion_select_ngModelChange_4_listener(e){M.fd(t);return M.Oc(2).options.categories=e})),M.Pc(5,\"translate\"),M.Pc(6,\"translate\"),M.nd(7,AddonModGlossaryEditPage_form_9_ion_item_14_ion_select_option_7_Template,2,2,\"ion-select-option\",16),M.Dc(),M.Dc()}if(2&t){const t=M.Oc(2);M.lc(2),M.rd(\" \",M.Qc(3,5,\"addon.mod_glossary.categories\"),\" \"),M.lc(2),M.Vc(\"ngModel\",t.options.categories)(\"placeholder\",M.Qc(5,7,\"addon.mod_glossary.categories\"))(\"interfaceOptions\",M.ad(11,_c1,M.Qc(6,9,\"addon.mod_glossary.categories\"))),M.lc(3),M.Vc(\"ngForOf\",t.categories)}}function AddonModGlossaryEditPage_form_9_ng_container_26_Template(t,e){if(1&t){const t=M.Fc();M.Cc(0),M.Ec(1,\"ion-item-divider\"),M.Ec(2,\"ion-label\"),M.Ec(3,\"h2\"),M.pd(4),M.Pc(5,\"translate\"),M.Dc(),M.Dc(),M.Dc(),M.Ec(6,\"ion-item\",18),M.Ec(7,\"ion-label\"),M.pd(8),M.Pc(9,\"translate\"),M.Dc(),M.Ec(10,\"ion-toggle\",19),M.Mc(\"ngModelChange\",(function AddonModGlossaryEditPage_form_9_ng_container_26_Template_ion_toggle_ngModelChange_10_listener(e){M.fd(t);return M.Oc(2).options.usedynalink=e})),M.Dc(),M.Dc(),M.Ec(11,\"ion-item\",18),M.Ec(12,\"ion-label\"),M.pd(13),M.Pc(14,\"translate\"),M.Dc(),M.Ec(15,\"ion-toggle\",20),M.Mc(\"ngModelChange\",(function AddonModGlossaryEditPage_form_9_ng_container_26_Template_ion_toggle_ngModelChange_15_listener(e){M.fd(t);return M.Oc(2).options.casesensitive=e})),M.Dc(),M.Dc(),M.Ec(16,\"ion-item\",18),M.Ec(17,\"ion-label\"),M.pd(18),M.Pc(19,\"translate\"),M.Dc(),M.Ec(20,\"ion-toggle\",21),M.Mc(\"ngModelChange\",(function AddonModGlossaryEditPage_form_9_ng_container_26_Template_ion_toggle_ngModelChange_20_listener(e){M.fd(t);return M.Oc(2).options.fullmatch=e})),M.Dc(),M.Dc(),M.Bc()}if(2&t){const t=M.Oc(2);M.lc(4),M.qd(M.Qc(5,9,\"addon.mod_glossary.linking\")),M.lc(4),M.qd(M.Qc(9,11,\"addon.mod_glossary.entryusedynalink\")),M.lc(2),M.Vc(\"ngModel\",t.options.usedynalink),M.lc(3),M.qd(M.Qc(14,13,\"addon.mod_glossary.casesensitive\")),M.lc(2),M.Vc(\"disabled\",!t.options.usedynalink)(\"ngModel\",t.options.casesensitive),M.lc(3),M.qd(M.Qc(19,15,\"addon.mod_glossary.fullmatch\")),M.lc(2),M.Vc(\"disabled\",!t.options.usedynalink)(\"ngModel\",t.options.fullmatch)}}function AddonModGlossaryEditPage_form_9_Template(t,e){if(1&t){const t=M.Fc();M.Ec(0,\"form\",null,6),M.Ec(2,\"ion-item\"),M.Ec(3,\"ion-label\",7),M.pd(4),M.Pc(5,\"translate\"),M.Dc(),M.Ec(6,\"ion-input\",8),M.Mc(\"ngModelChange\",(function AddonModGlossaryEditPage_form_9_Template_ion_input_ngModelChange_6_listener(e){M.fd(t);return M.Oc().entry.concept=e})),M.Pc(7,\"translate\"),M.Dc(),M.Dc(),M.Ec(8,\"ion-item\"),M.Ec(9,\"ion-label\",7),M.pd(10),M.Pc(11,\"translate\"),M.Dc(),M.Ec(12,\"core-rich-text-editor\",9),M.Mc(\"contentChanged\",(function AddonModGlossaryEditPage_form_9_Template_core_rich_text_editor_contentChanged_12_listener(e){M.fd(t);return M.Oc().onDefinitionChange(e)})),M.Pc(13,\"translate\"),M.Dc(),M.Dc(),M.nd(14,AddonModGlossaryEditPage_form_9_ion_item_14_Template,8,13,\"ion-item\",2),M.Ec(15,\"ion-item\"),M.Ec(16,\"ion-label\",10),M.pd(17),M.Pc(18,\"translate\"),M.Dc(),M.Ec(19,\"ion-textarea\",11),M.Mc(\"ngModelChange\",(function AddonModGlossaryEditPage_form_9_Template_ion_textarea_ngModelChange_19_listener(e){M.fd(t);return M.Oc().options.aliases=e})),M.Dc(),M.Dc(),M.Ec(20,\"ion-item-divider\"),M.Ec(21,\"ion-label\"),M.Ec(22,\"h2\"),M.pd(23),M.Pc(24,\"translate\"),M.Dc(),M.Dc(),M.Dc(),M.zc(25,\"core-attachments\",12),M.nd(26,AddonModGlossaryEditPage_form_9_ng_container_26_Template,21,17,\"ng-container\",2),M.Ec(27,\"ion-button\",13),M.Mc(\"click\",(function AddonModGlossaryEditPage_form_9_Template_ion_button_click_27_listener(){M.fd(t);return M.Oc().save()})),M.pd(28),M.Pc(29,\"translate\"),M.Dc(),M.Dc()}if(2&t){const t=M.Oc();M.lc(4),M.qd(M.Qc(5,24,\"addon.mod_glossary.concept\")),M.lc(2),M.Vc(\"placeholder\",M.Qc(7,26,\"addon.mod_glossary.concept\"))(\"ngModel\",t.entry.concept),M.lc(4),M.qd(M.Qc(11,28,\"addon.mod_glossary.definition\")),M.lc(2),M.Vc(\"control\",t.definitionControl)(\"placeholder\",M.Qc(13,30,\"addon.mod_glossary.definition\"))(\"component\",t.component)(\"componentId\",t.cmId)(\"autoSave\",!0)(\"contextInstanceId\",t.cmId)(\"draftExtraParams\",t.editorExtraParams),M.lc(2),M.Vc(\"ngIf\",t.categories.length>0),M.lc(3),M.rd(\" \",M.Qc(18,32,\"addon.mod_glossary.aliases\"),\" \"),M.lc(2),M.Vc(\"ngModel\",t.options.aliases)(\"core-auto-rows\",t.options.aliases),M.lc(4),M.qd(M.Qc(24,34,\"addon.mod_glossary.attachment\")),M.lc(2),M.Vc(\"files\",t.attachments)(\"component\",t.component)(\"componentId\",t.glossary.coursemodule)(\"allowOffline\",!0)(\"courseId\",t.courseId),M.lc(1),M.Vc(\"ngIf\",t.glossary.usedynalink),M.lc(1),M.Vc(\"disabled\",!t.entry.concept||!t.entry.definition),M.lc(1),M.rd(\" \",M.Qc(29,36,\"core.save\"),\" \")}}let F=(()=>{class AddonModGlossaryEditPage{constructor(t,e){this.route=t,this.splitView=e,this.component=_.b.COMPONENT,this.loaded=!1,this.attachments=[],this.definitionControl=new n.g,this.categories=[],this.editorExtraParams={},this.entry={concept:\"\",definition:\"\",timecreated:0},this.options={categories:[],aliases:\"\",usedynalink:!1,casesensitive:!1,fullmatch:!1},this.concept=\"\",this.isDestroyed=!1,this.saved=!1}ngOnInit(){var t,e;return Object(i.a)(this,void 0,void 0,(function*(){try{const o=this.route.snapshot.data;if(this.cmId=c.a.getRequiredRouteNumberParam(\"cmId\"),this.courseId=c.a.getRequiredRouteNumberParam(\"courseId\"),this.timecreated=c.a.getRequiredRouteNumberParam(\"timecreated\"),this.concept=c.a.getRouteParam(\"concept\")||\"\",this.editorExtraParams.timecreated=this.timecreated,0!==this.timecreated&&(null===(t=o.swipeEnabled)||void 0===t||t)){const t=s.a.getOrCreateSource(p.a,[this.courseId,this.cmId,null!==(e=o.glossaryPathPrefix)&&void 0!==e?e:\"\"]);this.entries=new edit_AddonModGlossaryEditEntriesSwipeManager(t),yield this.entries.start()}}catch(t){return l.a.showErrorModal(t),this.goBack(),void 0}this.fetchData()}))}ngOnDestroy(){var t;null===(t=this.entries)||void 0===t?void 0:t.destroy()}fetchData(){return Object(i.a)(this,void 0,void 0,(function*(){try{this.glossary=yield _.a.getGlossary(this.courseId,this.cmId),this.timecreated>0&&(yield this.loadOfflineData()),this.categories=yield _.a.getAllCategories(this.glossary.id,{cmId:this.cmId}),this.loaded=!0}catch(t){l.a.showErrorModalDefault(t,\"addon.mod_glossary.errorloadingglossary\",!0),this.goBack()}}))}loadOfflineData(){var t;return Object(i.a)(this,void 0,void 0,(function*(){if(!this.glossary)return;const e=yield E.a.getNewEntry(this.glossary.id,this.concept,this.timecreated);this.entry.concept=e.concept||\"\",this.entry.definition=e.definition||\"\",this.entry.timecreated=e.timecreated,this.originalData={concept:this.entry.concept,definition:this.entry.definition,files:[],timecreated:e.timecreated},e.options&&(this.options.categories=e.options.categories&&e.options.categories.split(\",\")||[],this.options.aliases=e.options.aliases||\"\",this.options.usedynalink=!!e.options.usedynalink,this.options.usedynalink&&(this.options.casesensitive=!!e.options.casesensitive,this.options.fullmatch=!!e.options.fullmatch)),(null===(t=e.attachments)||void 0===t?void 0:t.offline)&&(this.attachments=yield v.a.getStoredFiles(this.glossary.id,e.concept,e.timecreated),this.originalData.files=this.attachments.slice()),this.definitionControl.setValue(this.entry.definition)}))}resetForm(){this.entry.concept=\"\",this.entry.definition=\"\",this.entry.timecreated=0,this.originalData=void 0,this.options.categories=[],this.options.aliases=\"\",this.options.usedynalink=!1,this.options.casesensitive=!1,this.options.fullmatch=!1,this.attachments.length=0,this.definitionControl.setValue(\"\")}onDefinitionChange(t){this.entry.definition=t}canLeave(){return Object(i.a)(this,void 0,void 0,(function*(){return this.saved||(v.a.hasEntryDataChanged(this.entry,this.attachments,this.originalData)&&(yield l.a.showConfirm(m.J.instant(\"core.confirmcanceledit\"))),d.a.clearTmpFiles(this.attachments),y.a.triggerFormCancelledEvent(this.formElement,r.b.getCurrentSiteId())),!0}))}save(){var t;return Object(i.a)(this,void 0,void 0,(function*(){let e,o=this.entry.definition;const i=this.entry.timecreated||Date.now();if(!this.entry.concept||!o)return l.a.showErrorModal(\"addon.mod_glossary.fillfields\",!0),void 0;const n=yield l.a.showModalLoading(\"core.sending\",!0);o=h.a.formatHtmlLines(o);try{if(!this.glossary)return;const{saveOffline:s,attachmentsResult:l}=yield this.uploadAttachments(i),h={aliases:this.options.aliases,categories:this.options.categories.join(\",\")};if(this.glossary.usedynalink&&(h.usedynalink=this.options.usedynalink?1:0,this.options.usedynalink&&(h.casesensitive=this.options.casesensitive?1:0,h.fullmatch=this.options.fullmatch?1:0)),s){if(this.entry&&!this.glossary.allowduplicatedentries){if(yield _.a.isConceptUsed(this.glossary.id,this.entry.concept,{timeCreated:this.entry.timecreated,cmId:this.cmId}))throw new a.a(m.J.instant(\"addon.mod_glossary.errconceptalreadyexists\"))}yield E.a.addNewEntry(this.glossary.id,this.entry.concept,o,this.courseId,h,l,i,void 0,void 0,this.entry)}else yield _.a.addEntry(this.glossary.id,this.entry.concept,o,this.courseId,h,l,{timeCreated:i,discardEntry:this.entry,allowOffline:!this.attachments.length,checkDuplicates:!this.glossary.allowduplicatedentries});d.a.clearTmpFiles(this.attachments),u.b.trigger(_.b.ADD_ENTRY_EVENT,{glossaryId:this.glossary.id,entryId:e},r.b.getCurrentSiteId()),y.a.triggerFormSubmittedEvent(this.formElement,!1,r.b.getCurrentSiteId()),(null===(t=this.splitView)||void 0===t?void 0:t.outletActivated)?this.timecreated>0?yield this.loadOfflineData():this.resetForm():(this.saved=!0,c.a.back())}catch(t){l.a.showErrorModalDefault(t,\"addon.mod_glossary.cannoteditentry\",!0)}finally{n.dismiss()}}))}uploadAttachments(t){return Object(i.a)(this,void 0,void 0,(function*(){if(!this.attachments.length||!this.glossary)return{saveOffline:!1};try{return{saveOffline:!1,attachmentsResult:yield d.a.uploadOrReuploadFiles(this.attachments,_.b.COMPONENT,this.glossary.id)}}catch(e){if(g.a.isWebServiceError(e))throw e;return{saveOffline:!0,attachmentsResult:yield v.a.storeFiles(this.glossary.id,this.entry.concept,t,this.attachments)}}}))}goBack(){var t;(null===(t=this.splitView)||void 0===t?void 0:t.outletActivated)?c.a.navigate(\"../../\"):c.a.back()}}return AddonModGlossaryEditPage.ɵfac=function AddonModGlossaryEditPage_Factory(t){return new(t||AddonModGlossaryEditPage)(M.yc(b.a),M.yc(I.a,8))},AddonModGlossaryEditPage.ɵcmp=M.sc({type:AddonModGlossaryEditPage,selectors:[[\"page-addon-mod-glossary-edit\"]],viewQuery:function AddonModGlossaryEditPage_Query(t,e){var o;(1&t&&M.ud(V,!0),2&t)&&(M.dd(o=M.Nc())&&(e.formElement=o.first))},decls:10,vars:7,consts:[[\"slot\",\"start\"],[3,\"text\"],[4,\"ngIf\"],[3,\"core-swipe-navigation\"],[3,\"hideUntil\"],[\"contextLevel\",\"module\",3,\"text\",\"contextInstanceId\",\"courseId\"],[\"editFormEl\",\"\"],[\"position\",\"stacked\"],[\"type\",\"text\",\"name\",\"concept\",3,\"placeholder\",\"ngModel\",\"ngModelChange\"],[\"name\",\"addon_mod_glossary_edit\",\"contextLevel\",\"module\",\"elementId\",\"definition_editor\",3,\"control\",\"placeholder\",\"component\",\"componentId\",\"autoSave\",\"contextInstanceId\",\"draftExtraParams\",\"contentChanged\"],[\"position\",\"stacked\",\"id\",\"addon-mod-glossary-aliases-label\"],[\"rows\",\"1\",\"aria-labelledby\",\"addon-mod-glossary-aliases-label\",\"name\",\"aliases\",3,\"ngModel\",\"core-auto-rows\",\"ngModelChange\"],[3,\"files\",\"component\",\"componentId\",\"allowOffline\",\"courseId\"],[\"expand\",\"block\",1,\"ion-margin\",3,\"disabled\",\"click\"],[\"position\",\"stacked\",\"id\",\"addon-mod-glossary-categories-label\"],[\"multiple\",\"true\",\"aria-labelledby\",\"addon-mod-glossary-categories-label\",\"interface\",\"action-sheet\",\"name\",\"categories\",3,\"ngModel\",\"placeholder\",\"interfaceOptions\",\"ngModelChange\"],[3,\"value\",4,\"ngFor\",\"ngForOf\"],[3,\"value\"],[1,\"ion-text-wrap\"],[\"name\",\"usedynalink\",3,\"ngModel\",\"ngModelChange\"],[\"name\",\"casesensitive\",3,\"disabled\",\"ngModel\",\"ngModelChange\"],[\"name\",\"fullmatch\",3,\"disabled\",\"ngModel\",\"ngModelChange\"]],template:function AddonModGlossaryEditPage_Template(t,e){1&t&&(M.Ec(0,\"ion-header\"),M.Ec(1,\"ion-toolbar\"),M.Ec(2,\"ion-buttons\",0),M.zc(3,\"ion-back-button\",1),M.Pc(4,\"translate\"),M.Dc(),M.Ec(5,\"ion-title\"),M.nd(6,AddonModGlossaryEditPage_h1_6_Template,2,3,\"h1\",2),M.Dc(),M.Dc(),M.Dc(),M.Ec(7,\"ion-content\",3),M.Ec(8,\"core-loading\",4),M.nd(9,AddonModGlossaryEditPage_form_9_Template,30,38,\"form\",2),M.Dc(),M.Dc()),2&t&&(M.lc(3),M.Vc(\"text\",M.Qc(4,5,\"core.back\")),M.lc(3),M.Vc(\"ngIf\",e.glossary),M.lc(1),M.Vc(\"core-swipe-navigation\",e.entries),M.lc(1),M.Vc(\"hideUntil\",e.loaded),M.lc(1),M.Vc(\"ngIf\",e.glossary))},directives:[P.C,P.Ab,P.m,P.h,P.i,P.yb,D.t,C.a,P.v,O.a,A.a,w.a,n.H,n.s,n.t,P.I,P.O,P.H,P.Pb,n.r,n.u,G.a,P.wb,k.a,P.J,T.a,x.a,P.l,P.lb,P.Ob,D.s,P.mb,P.zb,P.d],pipes:[S.d],encapsulation:2}),AddonModGlossaryEditPage})();class edit_AddonModGlossaryEditEntriesSwipeManager extends f.a{getSelectedItemPathFromRoute(t){return`${this.getSource().GLOSSARY_PATH_PREFIX}edit/${t.params.timecreated}`}}var j=o(\"L3Fv\"),Q=o(\"ekpb\"),R=o(\"MLi9\");const N=[{path:\"\",component:F,canDeactivate:[R.a]}];let B=(()=>{class AddonModGlossaryEditPageModule{}return AddonModGlossaryEditPageModule.ɵmod=M.wc({type:AddonModGlossaryEditPageModule}),AddonModGlossaryEditPageModule.ɵinj=M.vc({factory:function AddonModGlossaryEditPageModule_Factory(t){return new(t||AddonModGlossaryEditPageModule)},imports:[[b.m.forChild(N),j.a,Q.a]]}),AddonModGlossaryEditPageModule})();void((\"undefined\"==typeof ngJitMode||ngJitMode)&&M.kd(B,{declarations:[F],imports:[b.m,j.a,Q.a]}))},eoiU:function(t,e,o){\"use strict\";o.d(e,\"a\",(function(){return CoreSwipeNavigationItemsManager}));var i=o(\"mrSG\"),n=o(\"pHTc\"),a=o(\"CtbY\");class CoreSwipeNavigationItemsManager extends a.a{start(){return Object(i.a)(this,void 0,void 0,(function*(){this.updateSelectedItem()}))}navigateToNextItem(){return Object(i.a)(this,void 0,void 0,(function*(){yield this.navigateToItemBy(1,\"forward\")}))}navigateToPreviousItem(){return Object(i.a)(this,void 0,void 0,(function*(){yield this.navigateToItemBy(-1,\"back\")}))}hasNextItem(){return Object(i.a)(this,void 0,void 0,(function*(){return!!(yield this.getItemBy(1))}))}hasPreviousItem(){return Object(i.a)(this,void 0,void 0,(function*(){return!!(yield this.getItemBy(-1))}))}getCurrentPageRoute(){return n.a.getCurrentRoute()}getSelectedItemPathFromRoute(t){const e=[];for(;t&&(e.push(...t.url),t.firstChild);)t=t.firstChild;return e.map((t=>t.path)).join(\"/\").replace(/\\/+/,\"/\").trim()||null}navigateToItemBy(t,e){return Object(i.a)(this,void 0,void 0,(function*(){const o=yield this.getItemBy(t);o&&(yield this.navigateToItem(o,{animationDirection:e,replace:!0}))}))}getItemBy(t){var e;return Object(i.a)(this,void 0,void 0,(function*(){const o=this.getSource().getItems(),i=null!==(e=this.selectedItem&&(null==o?void 0:o.indexOf(this.selectedItem)))&&void 0!==e?e:-1;if(-1===i||null===o)return null;const n=t>0?1:-1;let a=i,s=0;for(;s!==t&&(a+=n,!(a<0||a>=o.length));)this.skipItemInSwipe(o[a])||(s+=n);return s===t?o[a]:this.getSource().isCompleted()?null:(yield this.getSource().load(),this.getItemBy(t))}))}skipItemInSwipe(t){return!1}}}}]);","name":"4.047b54cf6141775ca58b.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[4],{\n\n/***/ \"+uFs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"AddonModGlossaryEditPageModule\", function() { return /* binding */ edit_module_AddonModGlossaryEditPageModule; });\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./src/core/classes/errors/error.ts\nvar errors_error = __webpack_require__(\"93ts\");\n\n// EXTERNAL MODULE: ./src/core/classes/items-management/routed-items-manager-sources-tracker.ts\nvar routed_items_manager_sources_tracker = __webpack_require__(\"baaQ\");\n\n// EXTERNAL MODULE: ./src/core/features/fileuploader/services/fileuploader.ts\nvar fileuploader = __webpack_require__(\"hSQQ\");\n\n// EXTERNAL MODULE: ./src/core/services/navigator.ts\nvar services_navigator = __webpack_require__(\"pHTc\");\n\n// EXTERNAL MODULE: ./src/core/services/sites.ts\nvar sites = __webpack_require__(\"9+EE\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/dom.ts + 2 modules\nvar dom = __webpack_require__(\"3LXp\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/text.ts + 1 modules\nvar utils_text = __webpack_require__(\"vuGA\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/utils.ts\nvar utils = __webpack_require__(\"bFG1\");\n\n// EXTERNAL MODULE: ./src/core/singletons/index.ts\nvar singletons = __webpack_require__(\"j3ag\");\n\n// EXTERNAL MODULE: ./src/core/singletons/events.ts\nvar events = __webpack_require__(\"fjkH\");\n\n// EXTERNAL MODULE: ./src/core/singletons/form.ts\nvar singletons_form = __webpack_require__(\"4reR\");\n\n// EXTERNAL MODULE: ./src/addons/mod/glossary/classes/glossary-entries-source.ts\nvar glossary_entries_source = __webpack_require__(\"fcHg\");\n\n// EXTERNAL MODULE: ./src/addons/mod/glossary/classes/glossary-entries-swipe-manager.ts\nvar glossary_entries_swipe_manager = __webpack_require__(\"1VuZ\");\n\n// EXTERNAL MODULE: ./src/addons/mod/glossary/services/glossary.ts\nvar glossary = __webpack_require__(\"gjmY\");\n\n// EXTERNAL MODULE: ./src/addons/mod/glossary/services/glossary-helper.ts\nvar glossary_helper = __webpack_require__(\"BZ3K\");\n\n// EXTERNAL MODULE: ./src/addons/mod/glossary/services/glossary-offline.ts\nvar glossary_offline = __webpack_require__(\"7DS8\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 10 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./src/core/components/split-view/split-view.ts\nvar split_view = __webpack_require__(\"46ml\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js + 5 modules\nvar ionic_angular = __webpack_require__(\"TEn/\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./src/core/directives/content.ts\nvar content = __webpack_require__(\"nt/U\");\n\n// EXTERNAL MODULE: ./src/core/directives/swipe-navigation.ts\nvar swipe_navigation = __webpack_require__(\"OZH1\");\n\n// EXTERNAL MODULE: ./src/core/components/loading/loading.ts\nvar loading = __webpack_require__(\"PgjG\");\n\n// EXTERNAL MODULE: ./src/core/directives/format-text.ts\nvar format_text = __webpack_require__(\"hMzs\");\n\n// EXTERNAL MODULE: ./src/core/features/editor/components/rich-text-editor/rich-text-editor.ts\nvar rich_text_editor = __webpack_require__(\"N5Lt\");\n\n// EXTERNAL MODULE: ./src/core/directives/auto-rows.ts\nvar auto_rows = __webpack_require__(\"d0nH\");\n\n// EXTERNAL MODULE: ./src/core/components/attachments/attachments.ts\nvar attachments = __webpack_require__(\"M9y5\");\n\n// EXTERNAL MODULE: ./src/core/directives/update-non-reactive-attributes.ts\nvar update_non_reactive_attributes = __webpack_require__(\"ACYt\");\n\n// EXTERNAL MODULE: ./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js + 8 modules\nvar ngx_translate_core = __webpack_require__(\"sYmb\");\n\n// CONCATENATED MODULE: ./src/addons/mod/glossary/pages/edit/edit.ts\n\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst _c0 = [\"editFormEl\"];\nfunction AddonModGlossaryEditPage_h1_6_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"h1\");\n        core[\"zc\" /* ɵɵelement */](1, \"core-format-text\", 5);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"text\", ctx_r0.glossary.name)(\"contextInstanceId\", ctx_r0.cmId)(\"courseId\", ctx_r0.courseId);\n    }\n}\nfunction AddonModGlossaryEditPage_form_9_ion_item_14_ion_select_option_7_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-select-option\", 17);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const category_r6 = ctx.$implicit;\n        core[\"Vc\" /* ɵɵproperty */](\"value\", category_r6.id);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", category_r6.name, \" \");\n    }\n}\nconst _c1 = function (a0) { return { header: a0 }; };\nfunction AddonModGlossaryEditPage_form_9_ion_item_14_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\", 14);\n        core[\"pd\" /* ɵɵtext */](2);\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](4, \"ion-select\", 15);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModGlossaryEditPage_form_9_ion_item_14_Template_ion_select_ngModelChange_4_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r8); const ctx_r7 = core[\"Oc\" /* ɵɵnextContext */](2); return ctx_r7.options.categories = $event; });\n        core[\"Pc\" /* ɵɵpipe */](5, \"translate\");\n        core[\"Pc\" /* ɵɵpipe */](6, \"translate\");\n        core[\"nd\" /* ɵɵtemplate */](7, AddonModGlossaryEditPage_form_9_ion_item_14_ion_select_option_7_Template, 2, 2, \"ion-select-option\", 16);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"Oc\" /* ɵɵnextContext */](2);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Qc\" /* ɵɵpipeBind1 */](3, 5, \"addon.mod_glossary.categories\"), \" \");\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r3.options.categories)(\"placeholder\", core[\"Qc\" /* ɵɵpipeBind1 */](5, 7, \"addon.mod_glossary.categories\"))(\"interfaceOptions\", core[\"ad\" /* ɵɵpureFunction1 */](11, _c1, core[\"Qc\" /* ɵɵpipeBind1 */](6, 9, \"addon.mod_glossary.categories\")));\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"Vc\" /* ɵɵproperty */](\"ngForOf\", ctx_r3.categories);\n    }\n}\nfunction AddonModGlossaryEditPage_form_9_ng_container_26_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Cc\" /* ɵɵelementContainerStart */](0);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-item-divider\");\n        core[\"Ec\" /* ɵɵelementStart */](2, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](3, \"h2\");\n        core[\"pd\" /* ɵɵtext */](4);\n        core[\"Pc\" /* ɵɵpipe */](5, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](6, \"ion-item\", 18);\n        core[\"Ec\" /* ɵɵelementStart */](7, \"ion-label\");\n        core[\"pd\" /* ɵɵtext */](8);\n        core[\"Pc\" /* ɵɵpipe */](9, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](10, \"ion-toggle\", 19);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModGlossaryEditPage_form_9_ng_container_26_Template_ion_toggle_ngModelChange_10_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r10); const ctx_r9 = core[\"Oc\" /* ɵɵnextContext */](2); return ctx_r9.options.usedynalink = $event; });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](11, \"ion-item\", 18);\n        core[\"Ec\" /* ɵɵelementStart */](12, \"ion-label\");\n        core[\"pd\" /* ɵɵtext */](13);\n        core[\"Pc\" /* ɵɵpipe */](14, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](15, \"ion-toggle\", 20);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModGlossaryEditPage_form_9_ng_container_26_Template_ion_toggle_ngModelChange_15_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r10); const ctx_r11 = core[\"Oc\" /* ɵɵnextContext */](2); return ctx_r11.options.casesensitive = $event; });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](16, \"ion-item\", 18);\n        core[\"Ec\" /* ɵɵelementStart */](17, \"ion-label\");\n        core[\"pd\" /* ɵɵtext */](18);\n        core[\"Pc\" /* ɵɵpipe */](19, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](20, \"ion-toggle\", 21);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModGlossaryEditPage_form_9_ng_container_26_Template_ion_toggle_ngModelChange_20_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r10); const ctx_r12 = core[\"Oc\" /* ɵɵnextContext */](2); return ctx_r12.options.fullmatch = $event; });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Bc\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = core[\"Oc\" /* ɵɵnextContext */](2);\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](5, 9, \"addon.mod_glossary.linking\"));\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](9, 11, \"addon.mod_glossary.entryusedynalink\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r4.options.usedynalink);\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](14, 13, \"addon.mod_glossary.casesensitive\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"disabled\", !ctx_r4.options.usedynalink)(\"ngModel\", ctx_r4.options.casesensitive);\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](19, 15, \"addon.mod_glossary.fullmatch\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"disabled\", !ctx_r4.options.usedynalink)(\"ngModel\", ctx_r4.options.fullmatch);\n    }\n}\nfunction AddonModGlossaryEditPage_form_9_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"form\", null, 6);\n        core[\"Ec\" /* ɵɵelementStart */](2, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](3, \"ion-label\", 7);\n        core[\"pd\" /* ɵɵtext */](4);\n        core[\"Pc\" /* ɵɵpipe */](5, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](6, \"ion-input\", 8);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModGlossaryEditPage_form_9_Template_ion_input_ngModelChange_6_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r14); const ctx_r13 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r13.entry.concept = $event; });\n        core[\"Pc\" /* ɵɵpipe */](7, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](8, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](9, \"ion-label\", 7);\n        core[\"pd\" /* ɵɵtext */](10);\n        core[\"Pc\" /* ɵɵpipe */](11, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](12, \"core-rich-text-editor\", 9);\n        core[\"Mc\" /* ɵɵlistener */](\"contentChanged\", function AddonModGlossaryEditPage_form_9_Template_core_rich_text_editor_contentChanged_12_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r14); const ctx_r15 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r15.onDefinitionChange($event); });\n        core[\"Pc\" /* ɵɵpipe */](13, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"nd\" /* ɵɵtemplate */](14, AddonModGlossaryEditPage_form_9_ion_item_14_Template, 8, 13, \"ion-item\", 2);\n        core[\"Ec\" /* ɵɵelementStart */](15, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](16, \"ion-label\", 10);\n        core[\"pd\" /* ɵɵtext */](17);\n        core[\"Pc\" /* ɵɵpipe */](18, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](19, \"ion-textarea\", 11);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModGlossaryEditPage_form_9_Template_ion_textarea_ngModelChange_19_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r14); const ctx_r16 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r16.options.aliases = $event; });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](20, \"ion-item-divider\");\n        core[\"Ec\" /* ɵɵelementStart */](21, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](22, \"h2\");\n        core[\"pd\" /* ɵɵtext */](23);\n        core[\"Pc\" /* ɵɵpipe */](24, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"zc\" /* ɵɵelement */](25, \"core-attachments\", 12);\n        core[\"nd\" /* ɵɵtemplate */](26, AddonModGlossaryEditPage_form_9_ng_container_26_Template, 21, 17, \"ng-container\", 2);\n        core[\"Ec\" /* ɵɵelementStart */](27, \"ion-button\", 13);\n        core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonModGlossaryEditPage_form_9_Template_ion_button_click_27_listener() { core[\"fd\" /* ɵɵrestoreView */](_r14); const ctx_r17 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r17.save(); });\n        core[\"pd\" /* ɵɵtext */](28);\n        core[\"Pc\" /* ɵɵpipe */](29, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](5, 24, \"addon.mod_glossary.concept\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"placeholder\", core[\"Qc\" /* ɵɵpipeBind1 */](7, 26, \"addon.mod_glossary.concept\"))(\"ngModel\", ctx_r1.entry.concept);\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](11, 28, \"addon.mod_glossary.definition\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"control\", ctx_r1.definitionControl)(\"placeholder\", core[\"Qc\" /* ɵɵpipeBind1 */](13, 30, \"addon.mod_glossary.definition\"))(\"component\", ctx_r1.component)(\"componentId\", ctx_r1.cmId)(\"autoSave\", true)(\"contextInstanceId\", ctx_r1.cmId)(\"draftExtraParams\", ctx_r1.editorExtraParams);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r1.categories.length > 0);\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Qc\" /* ɵɵpipeBind1 */](18, 32, \"addon.mod_glossary.aliases\"), \" \");\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r1.options.aliases)(\"core-auto-rows\", ctx_r1.options.aliases);\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](24, 34, \"addon.mod_glossary.attachment\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"files\", ctx_r1.attachments)(\"component\", ctx_r1.component)(\"componentId\", ctx_r1.glossary.coursemodule)(\"allowOffline\", true)(\"courseId\", ctx_r1.courseId);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r1.glossary.usedynalink);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"disabled\", !ctx_r1.entry.concept || !ctx_r1.entry.definition);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Qc\" /* ɵɵpipeBind1 */](29, 36, \"core.save\"), \" \");\n    }\n}\n/**\n * Page that displays the edit form.\n */\nlet edit_AddonModGlossaryEditPage = /*@__PURE__*/ (() => {\n    class AddonModGlossaryEditPage {\n        constructor(route, splitView) {\n            this.route = route;\n            this.splitView = splitView;\n            this.component = glossary[\"b\" /* AddonModGlossaryProvider */].COMPONENT;\n            this.loaded = false;\n            this.attachments = [];\n            this.definitionControl = new fesm2015_forms[\"g\" /* FormControl */]();\n            this.categories = [];\n            this.editorExtraParams = {};\n            this.entry = {\n                concept: '',\n                definition: '',\n                timecreated: 0,\n            };\n            this.options = {\n                categories: [],\n                aliases: '',\n                usedynalink: false,\n                casesensitive: false,\n                fullmatch: false,\n            };\n            this.concept = '';\n            this.isDestroyed = false;\n            this.saved = false;\n        }\n        /**\n         * Component being initialized.\n         */\n        ngOnInit() {\n            var _a, _b;\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    const routeData = this.route.snapshot.data;\n                    this.cmId = services_navigator[\"a\" /* CoreNavigator */].getRequiredRouteNumberParam('cmId');\n                    this.courseId = services_navigator[\"a\" /* CoreNavigator */].getRequiredRouteNumberParam('courseId');\n                    this.timecreated = services_navigator[\"a\" /* CoreNavigator */].getRequiredRouteNumberParam('timecreated');\n                    this.concept = services_navigator[\"a\" /* CoreNavigator */].getRouteParam('concept') || '';\n                    this.editorExtraParams.timecreated = this.timecreated;\n                    if (this.timecreated !== 0 && ((_a = routeData.swipeEnabled) !== null && _a !== void 0 ? _a : true)) {\n                        const source = routed_items_manager_sources_tracker[\"a\" /* CoreRoutedItemsManagerSourcesTracker */].getOrCreateSource(glossary_entries_source[\"a\" /* AddonModGlossaryEntriesSource */], [this.courseId, this.cmId, (_b = routeData.glossaryPathPrefix) !== null && _b !== void 0 ? _b : '']);\n                        this.entries = new edit_AddonModGlossaryEditEntriesSwipeManager(source);\n                        yield this.entries.start();\n                    }\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModal(error);\n                    this.goBack();\n                    return;\n                }\n                this.fetchData();\n            });\n        }\n        /**\n         * @inheritdoc\n         */\n        ngOnDestroy() {\n            var _a;\n            (_a = this.entries) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        /**\n         * Fetch required data.\n         *\n         * @return Promise resolved when done.\n         */\n        fetchData() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    this.glossary = yield glossary[\"a\" /* AddonModGlossary */].getGlossary(this.courseId, this.cmId);\n                    if (this.timecreated > 0) {\n                        yield this.loadOfflineData();\n                    }\n                    this.categories = yield glossary[\"a\" /* AddonModGlossary */].getAllCategories(this.glossary.id, {\n                        cmId: this.cmId,\n                    });\n                    this.loaded = true;\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(error, 'addon.mod_glossary.errorloadingglossary', true);\n                    this.goBack();\n                }\n            });\n        }\n        /**\n         * Load offline data when editing an offline entry.\n         *\n         * @return Promise resolved when done.\n         */\n        loadOfflineData() {\n            var _a;\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                if (!this.glossary) {\n                    return;\n                }\n                const entry = yield glossary_offline[\"a\" /* AddonModGlossaryOffline */].getNewEntry(this.glossary.id, this.concept, this.timecreated);\n                this.entry.concept = entry.concept || '';\n                this.entry.definition = entry.definition || '';\n                this.entry.timecreated = entry.timecreated;\n                this.originalData = {\n                    concept: this.entry.concept,\n                    definition: this.entry.definition,\n                    files: [],\n                    timecreated: entry.timecreated,\n                };\n                if (entry.options) {\n                    this.options.categories = (entry.options.categories && entry.options.categories.split(',')) || [];\n                    this.options.aliases = entry.options.aliases || '';\n                    this.options.usedynalink = !!entry.options.usedynalink;\n                    if (this.options.usedynalink) {\n                        this.options.casesensitive = !!entry.options.casesensitive;\n                        this.options.fullmatch = !!entry.options.fullmatch;\n                    }\n                }\n                // Treat offline attachments if any.\n                if ((_a = entry.attachments) === null || _a === void 0 ? void 0 : _a.offline) {\n                    this.attachments = yield glossary_helper[\"a\" /* AddonModGlossaryHelper */].getStoredFiles(this.glossary.id, entry.concept, entry.timecreated);\n                    this.originalData.files = this.attachments.slice();\n                }\n                this.definitionControl.setValue(this.entry.definition);\n            });\n        }\n        /**\n         * Reset the form data.\n         */\n        resetForm() {\n            this.entry.concept = '';\n            this.entry.definition = '';\n            this.entry.timecreated = 0;\n            this.originalData = undefined;\n            this.options.categories = [];\n            this.options.aliases = '';\n            this.options.usedynalink = false;\n            this.options.casesensitive = false;\n            this.options.fullmatch = false;\n            this.attachments.length = 0; // Empty the array.\n            this.definitionControl.setValue('');\n        }\n        /**\n         * Definition changed.\n         *\n         * @param text The new text.\n         */\n        onDefinitionChange(text) {\n            this.entry.definition = text;\n        }\n        /**\n         * Check if we can leave the page or not.\n         *\n         * @return Resolved if we can leave it, rejected if not.\n         */\n        canLeave() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                if (this.saved) {\n                    return true;\n                }\n                if (glossary_helper[\"a\" /* AddonModGlossaryHelper */].hasEntryDataChanged(this.entry, this.attachments, this.originalData)) {\n                    // Show confirmation if some data has been modified.\n                    yield dom[\"a\" /* CoreDomUtils */].showConfirm(singletons[\"J\" /* Translate */].instant('core.confirmcanceledit'));\n                }\n                // Delete the local files from the tmp folder.\n                fileuploader[\"a\" /* CoreFileUploader */].clearTmpFiles(this.attachments);\n                singletons_form[\"a\" /* CoreForms */].triggerFormCancelledEvent(this.formElement, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n                return true;\n            });\n        }\n        /**\n         * Save the entry.\n         */\n        save() {\n            var _a;\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                let definition = this.entry.definition;\n                let entryId;\n                const timecreated = this.entry.timecreated || Date.now();\n                if (!this.entry.concept || !definition) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModal('addon.mod_glossary.fillfields', true);\n                    return;\n                }\n                const modal = yield dom[\"a\" /* CoreDomUtils */].showModalLoading('core.sending', true);\n                definition = utils_text[\"a\" /* CoreTextUtils */].formatHtmlLines(definition);\n                try {\n                    if (!this.glossary) {\n                        return;\n                    }\n                    // Upload attachments first if any.\n                    const { saveOffline, attachmentsResult } = yield this.uploadAttachments(timecreated);\n                    const options = {\n                        aliases: this.options.aliases,\n                        categories: this.options.categories.join(','),\n                    };\n                    if (this.glossary.usedynalink) {\n                        options.usedynalink = this.options.usedynalink ? 1 : 0;\n                        if (this.options.usedynalink) {\n                            options.casesensitive = this.options.casesensitive ? 1 : 0;\n                            options.fullmatch = this.options.fullmatch ? 1 : 0;\n                        }\n                    }\n                    if (saveOffline) {\n                        if (this.entry && !this.glossary.allowduplicatedentries) {\n                            // Check if the entry is duplicated in online or offline mode.\n                            const isUsed = yield glossary[\"a\" /* AddonModGlossary */].isConceptUsed(this.glossary.id, this.entry.concept, {\n                                timeCreated: this.entry.timecreated,\n                                cmId: this.cmId,\n                            });\n                            if (isUsed) {\n                                // There's a entry with same name, reject with error message.\n                                throw new errors_error[\"a\" /* CoreError */](singletons[\"J\" /* Translate */].instant('addon.mod_glossary.errconceptalreadyexists'));\n                            }\n                        }\n                        // Save entry in offline.\n                        yield glossary_offline[\"a\" /* AddonModGlossaryOffline */].addNewEntry(this.glossary.id, this.entry.concept, definition, this.courseId, options, attachmentsResult, timecreated, undefined, undefined, this.entry);\n                    }\n                    else {\n                        // Try to send it to server.\n                        // Don't allow offline if there are attachments since they were uploaded fine.\n                        yield glossary[\"a\" /* AddonModGlossary */].addEntry(this.glossary.id, this.entry.concept, definition, this.courseId, options, attachmentsResult, {\n                            timeCreated: timecreated,\n                            discardEntry: this.entry,\n                            allowOffline: !this.attachments.length,\n                            checkDuplicates: !this.glossary.allowduplicatedentries,\n                        });\n                    }\n                    // Delete the local files from the tmp folder.\n                    fileuploader[\"a\" /* CoreFileUploader */].clearTmpFiles(this.attachments);\n                    if (entryId) {\n                        // Data sent to server, delete stored files (if any).\n                        glossary_helper[\"a\" /* AddonModGlossaryHelper */].deleteStoredFiles(this.glossary.id, this.entry.concept, timecreated);\n                        events[\"b\" /* CoreEvents */].trigger(events[\"b\" /* CoreEvents */].ACTIVITY_DATA_SENT, { module: 'glossary' });\n                    }\n                    events[\"b\" /* CoreEvents */].trigger(glossary[\"b\" /* AddonModGlossaryProvider */].ADD_ENTRY_EVENT, {\n                        glossaryId: this.glossary.id,\n                        entryId: entryId,\n                    }, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n                    singletons_form[\"a\" /* CoreForms */].triggerFormSubmittedEvent(this.formElement, !!entryId, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n                    if ((_a = this.splitView) === null || _a === void 0 ? void 0 : _a.outletActivated) {\n                        if (this.timecreated > 0) {\n                            // Reload the data.\n                            yield this.loadOfflineData();\n                        }\n                        else {\n                            // Empty form.\n                            this.resetForm();\n                        }\n                    }\n                    else {\n                        this.saved = true;\n                        services_navigator[\"a\" /* CoreNavigator */].back();\n                    }\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(error, 'addon.mod_glossary.cannoteditentry', true);\n                }\n                finally {\n                    modal.dismiss();\n                }\n            });\n        }\n        /**\n         * Upload entry attachments if any.\n         *\n         * @param timecreated Entry's timecreated.\n         * @return Promise resolved when done.\n         */\n        uploadAttachments(timecreated) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                if (!this.attachments.length || !this.glossary) {\n                    return {\n                        saveOffline: false,\n                    };\n                }\n                try {\n                    const attachmentsResult = yield fileuploader[\"a\" /* CoreFileUploader */].uploadOrReuploadFiles(this.attachments, glossary[\"b\" /* AddonModGlossaryProvider */].COMPONENT, this.glossary.id);\n                    return {\n                        saveOffline: false,\n                        attachmentsResult,\n                    };\n                }\n                catch (error) {\n                    if (utils[\"a\" /* CoreUtils */].isWebServiceError(error)) {\n                        throw error;\n                    }\n                    // Cannot upload them in online, save them in offline.\n                    const attachmentsResult = yield glossary_helper[\"a\" /* AddonModGlossaryHelper */].storeFiles(this.glossary.id, this.entry.concept, timecreated, this.attachments);\n                    return {\n                        saveOffline: true,\n                        attachmentsResult,\n                    };\n                }\n            });\n        }\n        /**\n         * Helper function to go back.\n         */\n        goBack() {\n            var _a;\n            if ((_a = this.splitView) === null || _a === void 0 ? void 0 : _a.outletActivated) {\n                services_navigator[\"a\" /* CoreNavigator */].navigate('../../');\n            }\n            else {\n                services_navigator[\"a\" /* CoreNavigator */].back();\n            }\n        }\n    }\n    AddonModGlossaryEditPage.ɵfac = function AddonModGlossaryEditPage_Factory(t) { return new (t || AddonModGlossaryEditPage)(core[\"yc\" /* ɵɵdirectiveInject */](router[\"a\" /* ActivatedRoute */]), core[\"yc\" /* ɵɵdirectiveInject */](split_view[\"a\" /* CoreSplitViewComponent */], 8)); };\n    AddonModGlossaryEditPage.ɵcmp = core[\"sc\" /* ɵɵdefineComponent */]({ type: AddonModGlossaryEditPage, selectors: [[\"page-addon-mod-glossary-edit\"]], viewQuery: function AddonModGlossaryEditPage_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"ud\" /* ɵɵviewQuery */](_c0, true);\n            }\n            if (rf & 2) {\n                var _t;\n                core[\"dd\" /* ɵɵqueryRefresh */](_t = core[\"Nc\" /* ɵɵloadQuery */]()) && (ctx.formElement = _t.first);\n            }\n        }, decls: 10, vars: 7, consts: [[\"slot\", \"start\"], [3, \"text\"], [4, \"ngIf\"], [3, \"core-swipe-navigation\"], [3, \"hideUntil\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [\"editFormEl\", \"\"], [\"position\", \"stacked\"], [\"type\", \"text\", \"name\", \"concept\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"name\", \"addon_mod_glossary_edit\", \"contextLevel\", \"module\", \"elementId\", \"definition_editor\", 3, \"control\", \"placeholder\", \"component\", \"componentId\", \"autoSave\", \"contextInstanceId\", \"draftExtraParams\", \"contentChanged\"], [\"position\", \"stacked\", \"id\", \"addon-mod-glossary-aliases-label\"], [\"rows\", \"1\", \"aria-labelledby\", \"addon-mod-glossary-aliases-label\", \"name\", \"aliases\", 3, \"ngModel\", \"core-auto-rows\", \"ngModelChange\"], [3, \"files\", \"component\", \"componentId\", \"allowOffline\", \"courseId\"], [\"expand\", \"block\", 1, \"ion-margin\", 3, \"disabled\", \"click\"], [\"position\", \"stacked\", \"id\", \"addon-mod-glossary-categories-label\"], [\"multiple\", \"true\", \"aria-labelledby\", \"addon-mod-glossary-categories-label\", \"interface\", \"action-sheet\", \"name\", \"categories\", 3, \"ngModel\", \"placeholder\", \"interfaceOptions\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"ion-text-wrap\"], [\"name\", \"usedynalink\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"casesensitive\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"name\", \"fullmatch\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"]], template: function AddonModGlossaryEditPage_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ec\" /* ɵɵelementStart */](0, \"ion-header\");\n                core[\"Ec\" /* ɵɵelementStart */](1, \"ion-toolbar\");\n                core[\"Ec\" /* ɵɵelementStart */](2, \"ion-buttons\", 0);\n                core[\"zc\" /* ɵɵelement */](3, \"ion-back-button\", 1);\n                core[\"Pc\" /* ɵɵpipe */](4, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](5, \"ion-title\");\n                core[\"nd\" /* ɵɵtemplate */](6, AddonModGlossaryEditPage_h1_6_Template, 2, 3, \"h1\", 2);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](7, \"ion-content\", 3);\n                core[\"Ec\" /* ɵɵelementStart */](8, \"core-loading\", 4);\n                core[\"nd\" /* ɵɵtemplate */](9, AddonModGlossaryEditPage_form_9_Template, 30, 38, \"form\", 2);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"Vc\" /* ɵɵproperty */](\"text\", core[\"Qc\" /* ɵɵpipeBind1 */](4, 5, \"core.back\"));\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.glossary);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"core-swipe-navigation\", ctx.entries);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"hideUntil\", ctx.loaded);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.glossary);\n            }\n        }, directives: [ionic_angular[\"C\" /* IonHeader */], ionic_angular[\"Ab\" /* IonToolbar */], ionic_angular[\"m\" /* IonButtons */], ionic_angular[\"h\" /* IonBackButton */], ionic_angular[\"i\" /* IonBackButtonDelegate */], ionic_angular[\"yb\" /* IonTitle */], common[\"t\" /* NgIf */], content[\"a\" /* CoreContentDirective */], ionic_angular[\"v\" /* IonContent */], swipe_navigation[\"a\" /* CoreSwipeNavigationDirective */], loading[\"a\" /* CoreLoadingComponent */], format_text[\"a\" /* CoreFormatTextDirective */], fesm2015_forms[\"H\" /* ɵangular_packages_forms_forms_y */], fesm2015_forms[\"s\" /* NgControlStatusGroup */], fesm2015_forms[\"t\" /* NgForm */], ionic_angular[\"I\" /* IonItem */], ionic_angular[\"O\" /* IonLabel */], ionic_angular[\"H\" /* IonInput */], ionic_angular[\"Pb\" /* TextValueAccessor */], fesm2015_forms[\"r\" /* NgControlStatus */], fesm2015_forms[\"u\" /* NgModel */], rich_text_editor[\"a\" /* CoreEditorRichTextEditorComponent */], ionic_angular[\"wb\" /* IonTextarea */], auto_rows[\"a\" /* CoreAutoRowsDirective */], ionic_angular[\"J\" /* IonItemDivider */], attachments[\"a\" /* CoreAttachmentsComponent */], update_non_reactive_attributes[\"a\" /* CoreUpdateNonReactiveAttributesDirective */], ionic_angular[\"l\" /* IonButton */], ionic_angular[\"lb\" /* IonSelect */], ionic_angular[\"Ob\" /* SelectValueAccessor */], common[\"s\" /* NgForOf */], ionic_angular[\"mb\" /* IonSelectOption */], ionic_angular[\"zb\" /* IonToggle */], ionic_angular[\"d\" /* BooleanValueAccessor */]], pipes: [ngx_translate_core[\"d\" /* TranslatePipe */]], encapsulation: 2 });\n    return AddonModGlossaryEditPage;\n})();\n/**\n * Helper to manage swiping within a collection of glossary entries.\n */\nclass edit_AddonModGlossaryEditEntriesSwipeManager extends glossary_entries_swipe_manager[\"a\" /* AddonModGlossaryEntriesSwipeManager */] {\n    /**\n     * @inheritdoc\n     */\n    getSelectedItemPathFromRoute(route) {\n        return `${this.getSource().GLOSSARY_PATH_PREFIX}edit/${route.params.timecreated}`;\n    }\n}\n\n// EXTERNAL MODULE: ./src/core/shared.module.ts + 3 modules\nvar shared_module = __webpack_require__(\"L3Fv\");\n\n// EXTERNAL MODULE: ./src/core/features/editor/components/components.module.ts\nvar components_module = __webpack_require__(\"ekpb\");\n\n// EXTERNAL MODULE: ./src/core/guards/can-leave.ts\nvar can_leave = __webpack_require__(\"MLi9\");\n\n// CONCATENATED MODULE: ./src/addons/mod/glossary/pages/edit/edit.module.ts\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\nconst routes = [{\n        path: '',\n        component: edit_AddonModGlossaryEditPage,\n        canDeactivate: [can_leave[\"a\" /* CanLeaveGuard */]],\n    }];\nlet edit_module_AddonModGlossaryEditPageModule = /*@__PURE__*/ (() => {\n    class AddonModGlossaryEditPageModule {\n    }\n    AddonModGlossaryEditPageModule.ɵmod = core[\"wc\" /* ɵɵdefineNgModule */]({ type: AddonModGlossaryEditPageModule });\n    AddonModGlossaryEditPageModule.ɵinj = core[\"vc\" /* ɵɵdefineInjector */]({ factory: function AddonModGlossaryEditPageModule_Factory(t) { return new (t || AddonModGlossaryEditPageModule)(); }, imports: [[\n                router[\"m\" /* RouterModule */].forChild(routes),\n                shared_module[\"a\" /* CoreSharedModule */],\n                components_module[\"a\" /* CoreEditorComponentsModule */],\n            ]] });\n    return AddonModGlossaryEditPageModule;\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"kd\" /* ɵɵsetNgModuleScope */](edit_module_AddonModGlossaryEditPageModule, { declarations: [edit_AddonModGlossaryEditPage], imports: [router[\"m\" /* RouterModule */], shared_module[\"a\" /* CoreSharedModule */],\n            components_module[\"a\" /* CoreEditorComponentsModule */]] });\n})();\n\n\n/***/ }),\n\n/***/ \"eoiU\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CoreSwipeNavigationItemsManager; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"mrSG\");\n/* harmony import */ var _services_navigator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"pHTc\");\n/* harmony import */ var _routed_items_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"CtbY\");\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Helper class to manage the state and routing of a swipeable page.\n */\nclass CoreSwipeNavigationItemsManager extends _routed_items_manager__WEBPACK_IMPORTED_MODULE_2__[/* CoreRoutedItemsManager */ \"a\"] {\n    /**\n     * Process page started operations.\n     */\n    start() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            this.updateSelectedItem();\n        });\n    }\n    /**\n     * Navigate to the next item.\n     */\n    navigateToNextItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            yield this.navigateToItemBy(1, 'forward');\n        });\n    }\n    /**\n     * Navigate to the previous item.\n     */\n    navigateToPreviousItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            yield this.navigateToItemBy(-1, 'back');\n        });\n    }\n    /**\n     * Has a next item.\n     */\n    hasNextItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const item = yield this.getItemBy(1);\n            return !!item;\n        });\n    }\n    /**\n     * Has a previous item.\n     */\n    hasPreviousItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const item = yield this.getItemBy(-1);\n            return !!item;\n        });\n    }\n    /**\n     * @inheritdoc\n     */\n    getCurrentPageRoute() {\n        return _services_navigator__WEBPACK_IMPORTED_MODULE_1__[/* CoreNavigator */ \"a\"].getCurrentRoute();\n    }\n    /**\n     * @inheritdoc\n     */\n    getSelectedItemPathFromRoute(route) {\n        const segments = [];\n        while (route) {\n            segments.push(...route.url);\n            if (!route.firstChild) {\n                break;\n            }\n            route = route.firstChild;\n        }\n        return segments.map(segment => segment.path).join('/').replace(/\\/+/, '/').trim() || null;\n    }\n    /**\n     * Navigate to an item by an offset.\n     *\n     * @param delta Index offset.\n     * @param animationDirection Animation direction.\n     */\n    navigateToItemBy(delta, animationDirection) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const item = yield this.getItemBy(delta);\n            if (!item) {\n                return;\n            }\n            yield this.navigateToItem(item, { animationDirection, replace: true });\n        });\n    }\n    /**\n     * Get item by an offset.\n     *\n     * @param delta Index offset.\n     */\n    getItemBy(delta) {\n        var _a;\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const items = this.getSource().getItems();\n            const selectedIndex = (_a = (this.selectedItem && (items === null || items === void 0 ? void 0 : items.indexOf(this.selectedItem)))) !== null && _a !== void 0 ? _a : -1;\n            if (selectedIndex === -1 || items === null) {\n                return null;\n            }\n            const deltaStep = delta > 0 ? 1 : -1;\n            let nextIndex = selectedIndex;\n            let deltaMoved = 0;\n            while (deltaMoved !== delta) {\n                nextIndex += deltaStep;\n                if (nextIndex < 0 || nextIndex >= items.length) {\n                    break;\n                }\n                if (this.skipItemInSwipe(items[nextIndex])) {\n                    continue;\n                }\n                deltaMoved += deltaStep;\n            }\n            if (deltaMoved === delta) {\n                return items[nextIndex];\n            }\n            if (!this.getSource().isCompleted()) {\n                yield this.getSource().load();\n                return this.getItemBy(delta);\n            }\n            return null;\n        });\n    }\n    /**\n     * Check if an item should be skipped during swipe navigation.\n     *\n     * @param item Item.\n     * @returns Whether to skip this item during swipe navigation.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    skipItemInSwipe(item) {\n        return false;\n    }\n}\n\n\n/***/ })\n\n}]);","inputSourceMap":null}