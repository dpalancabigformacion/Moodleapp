{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{twN0:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"AddonMessagesGroupConversationsPageModule\",(function(){return Y}));var s=t(\"tyNb\"),o=t(\"vY5A\"),a=t(\"muSn\"),i=t(\"Y+03\"),r=t(\"L3Fv\"),d=t(\"mrSG\"),c=t(\"TEn/\"),l=t(\"fjkH\"),g=t(\"9+EE\"),u=t(\"KMk0\"),_=t(\"nopL\"),p=t(\"3LXp\"),m=t(\"4pns\"),v=t(\"2eZG\"),f=t(\"j3ag\"),h=t(\"bFG1\"),C=t(\"pHTc\"),M=t(\"YyYz\"),P=t(\"r2Z7\"),O=t(\"fXoL\"),b=t(\"ACYt\"),E=t(\"3CSS\"),A=t(\"C1x5\"),T=t(\"nt/U\"),x=t(\"46ml\"),I=t(\"PgjG\"),G=t(\"ofXK\"),D=t(\"xpMl\"),y=t(\"hMzs\"),V=t(\"NcPy\"),k=t(\"FeAf\"),w=t(\"sYmb\"),N=t(\"Cg42\");const S=[\"favlist\"],L=[\"grouplist\"],R=[\"indlist\"];function AddonMessagesGroupConversationsPage_ion_badge_30_Template(e,n){if(1&e&&(O.Ec(0,\"ion-badge\",29),O.pd(1),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.qd(e.contactRequestsCount)}}const _c3=function(e){return{$a:e}};function AddonMessagesGroupConversationsPage_span_31_Template(e,n){if(1&e&&(O.Ec(0,\"span\",30),O.pd(1),O.Pc(2,\"translate\"),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.rd(\" \",O.Rc(2,1,\"addon.messages.pendingcontactrequests\",O.ad(4,_c3,e.contactRequestsCount)),\" \")}}function AddonMessagesGroupConversationsPage_ion_badge_39_Template(e,n){if(1&e&&(O.Ec(0,\"ion-badge\",29),O.pd(1),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.qd(e.favourites.unread)}}function AddonMessagesGroupConversationsPage_span_40_Template(e,n){if(1&e&&(O.Ec(0,\"span\",30),O.pd(1),O.Pc(2,\"translate\"),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.rd(\" \",O.Rc(2,1,\"addon.messages.unreadconversations\",O.ad(4,_c3,e.favourites.unread)),\" \")}}function AddonMessagesGroupConversationsPage_ng_container_43_Template(e,n){1&e&&O.Ac(0)}function AddonMessagesGroupConversationsPage_ion_item_45_Template(e,n){1&e&&(O.Ec(0,\"ion-item\",31),O.Ec(1,\"ion-label\"),O.Ec(2,\"p\"),O.pd(3),O.Pc(4,\"translate\"),O.Dc(),O.Dc(),O.Dc()),2&e&&(O.lc(3),O.qd(O.Qc(4,1,\"addon.messages.nofavourites\")))}function AddonMessagesGroupConversationsPage_ion_item_46_Template(e,n){1&e&&(O.Ec(0,\"ion-item\",32),O.Ec(1,\"ion-label\"),O.zc(2,\"ion-spinner\"),O.Pc(3,\"translate\"),O.Dc(),O.Dc()),2&e&&(O.lc(2),O.mc(\"aria-label\",O.Qc(3,1,\"core.loading\")))}function AddonMessagesGroupConversationsPage_ion_badge_54_Template(e,n){if(1&e&&(O.Ec(0,\"ion-badge\",29),O.pd(1),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.qd(e.group.unread)}}function AddonMessagesGroupConversationsPage_span_55_Template(e,n){if(1&e&&(O.Ec(0,\"span\",30),O.pd(1),O.Pc(2,\"translate\"),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.rd(\" \",O.Rc(2,1,\"addon.messages.unreadconversations\",O.ad(4,_c3,e.group.unread)),\" \")}}function AddonMessagesGroupConversationsPage_ng_container_58_Template(e,n){1&e&&O.Ac(0)}function AddonMessagesGroupConversationsPage_ion_item_60_Template(e,n){1&e&&(O.Ec(0,\"ion-item\",31),O.Ec(1,\"ion-label\"),O.Ec(2,\"p\"),O.pd(3),O.Pc(4,\"translate\"),O.Dc(),O.Dc(),O.Dc()),2&e&&(O.lc(3),O.qd(O.Qc(4,1,\"addon.messages.nogroupconversations\")))}function AddonMessagesGroupConversationsPage_ion_item_61_Template(e,n){1&e&&(O.Ec(0,\"ion-item\",32),O.Ec(1,\"ion-label\"),O.zc(2,\"ion-spinner\"),O.Pc(3,\"translate\"),O.Dc(),O.Dc()),2&e&&(O.lc(2),O.mc(\"aria-label\",O.Qc(3,1,\"core.loading\")))}function AddonMessagesGroupConversationsPage_ion_badge_69_Template(e,n){if(1&e&&(O.Ec(0,\"ion-badge\",29),O.pd(1),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.qd(e.individual.unread)}}function AddonMessagesGroupConversationsPage_span_70_Template(e,n){if(1&e&&(O.Ec(0,\"span\",30),O.pd(1),O.Pc(2,\"translate\"),O.Dc()),2&e){const e=O.Oc();O.lc(1),O.rd(\" \",O.Rc(2,1,\"addon.messages.unreadconversations\",O.ad(4,_c3,e.individual.unread)),\" \")}}function AddonMessagesGroupConversationsPage_ng_container_73_Template(e,n){1&e&&O.Ac(0)}function AddonMessagesGroupConversationsPage_ion_item_75_Template(e,n){1&e&&(O.Ec(0,\"ion-item\",31),O.Ec(1,\"ion-label\"),O.Ec(2,\"p\"),O.pd(3),O.Pc(4,\"translate\"),O.Dc(),O.Dc(),O.Dc()),2&e&&(O.lc(3),O.qd(O.Qc(4,1,\"addon.messages.noindividualconversations\")))}function AddonMessagesGroupConversationsPage_ion_item_76_Template(e,n){1&e&&(O.Ec(0,\"ion-item\",32),O.Ec(1,\"ion-label\"),O.zc(2,\"ion-spinner\"),O.Pc(3,\"translate\"),O.Dc(),O.Dc()),2&e&&(O.lc(2),O.mc(\"aria-label\",O.Qc(3,1,\"core.loading\")))}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_avatar_1_Template(e,n){if(1&e&&(O.Ec(0,\"ion-avatar\",0),O.zc(1,\"img\",46),O.Dc()),2&e){const e=O.Oc().$implicit;O.lc(1),O.Vc(\"src\",e.imageurl,O.id)(\"alt\",e.name)}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_core_user_avatar_2_Template(e,n){if(1&e&&O.zc(0,\"core-user-avatar\",47),2&e){const e=O.Oc().$implicit;O.Vc(\"user\",e.otherUser)(\"linkProfile\",!1)(\"checkOnline\",e.showonlinestatus)}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_7_Template(e,n){1&e&&(O.zc(0,\"ion-icon\",48),O.Pc(1,\"translate\")),2&e&&O.Vc(\"title\",O.Qc(1,1,\"addon.messages.contactblocked\"))}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_8_Template(e,n){1&e&&(O.zc(0,\"ion-icon\",49),O.Pc(1,\"translate\")),2&e&&O.Vc(\"title\",O.Qc(1,1,\"addon.messages.mutedconversation\"))}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_1_Template(e,n){if(1&e&&(O.Ec(0,\"span\",52),O.pd(1),O.Pc(2,\"coreDateDayOrTime\"),O.Dc()),2&e){const e=O.Oc(2).$implicit;O.lc(1),O.rd(\" \",O.Qc(2,1,e.lastmessagedate),\" \")}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_ion_badge_2_Template(e,n){if(1&e&&(O.Ec(0,\"ion-badge\",53),O.pd(1),O.Dc()),2&e){const e=O.Oc(2).$implicit;O.lc(1),O.qd(e.unreadcount)}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_3_Template(e,n){if(1&e&&(O.Ec(0,\"span\",30),O.pd(1),O.Pc(2,\"translate\"),O.Dc()),2&e){const e=O.Oc(2).$implicit;O.lc(1),O.rd(\" \",O.Rc(2,1,\"addon.messages.unreadmessages\",O.ad(4,_c3,e.unreadcount)),\" \")}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_Template(e,n){if(1&e&&(O.Ec(0,\"ion-note\"),O.nd(1,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_1_Template,3,3,\"span\",50),O.nd(2,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_ion_badge_2_Template,2,1,\"ion-badge\",51),O.nd(3,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_3_Template,3,6,\"span\",13),O.Dc()),2&e){const e=O.Oc().$implicit;O.lc(1),O.Vc(\"ngIf\",e.lastmessagedate>0),O.lc(1),O.Vc(\"ngIf\",e.unreadcount>0),O.lc(1),O.Vc(\"ngIf\",e.unreadcount>0)}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_p_10_Template(e,n){if(1&e&&(O.Ec(0,\"p\"),O.zc(1,\"core-format-text\",39),O.Dc()),2&e){const e=O.Oc().$implicit;O.lc(1),O.Vc(\"text\",e.subname)(\"contextInstanceId\",0)}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_12_Template(e,n){1&e&&(O.Ec(0,\"span\",54),O.pd(1),O.Pc(2,\"translate\"),O.Dc()),2&e&&(O.lc(1),O.rd(\" \",O.Qc(2,1,\"addon.messages.you\"),\" \"))}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_13_Template(e,n){if(1&e&&(O.Ec(0,\"span\",54),O.pd(1),O.Dc()),2&e){const e=O.Oc().$implicit;O.lc(1),O.qd(e.members[0].fullname+\":\")}}function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_Template(e,n){if(1&e){const e=O.Fc();O.Ec(0,\"ion-item\",34),O.Mc(\"click\",(function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_Template_ion_item_click_0_listener(){O.fd(e);const t=n.$implicit;return O.Oc(2).gotoConversation(t.id,t.userid)})),O.nd(1,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_avatar_1_Template,2,2,\"ion-avatar\",35),O.nd(2,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_core_user_avatar_2_Template,1,3,\"core-user-avatar\",36),O.Ec(3,\"ion-label\"),O.Ec(4,\"div\",37),O.Ec(5,\"p\",38),O.zc(6,\"core-format-text\",39),O.nd(7,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_7_Template,2,3,\"ion-icon\",40),O.nd(8,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_8_Template,2,3,\"ion-icon\",41),O.Dc(),O.nd(9,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_Template,4,3,\"ion-note\",42),O.Dc(),O.nd(10,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_p_10_Template,2,2,\"p\",42),O.Ec(11,\"p\",43),O.nd(12,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_12_Template,3,3,\"span\",44),O.nd(13,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_13_Template,2,1,\"span\",44),O.zc(14,\"core-format-text\",45),O.Dc(),O.Dc(),O.Dc()}if(2&e){const e=n.$implicit,t=O.Oc(2);O.Xc(\"id\",\"addon-message-conversation-\",e.id?e.id:\"user-\"+e.userid,\"\"),O.mc(\"aria-current\",e.id&&e.id==t.selectedConversationId||e.userid&&e.userid==t.selectedUserId?\"page\":\"false\")(\"aria-label\",e.name),O.lc(1),O.Vc(\"ngIf\",e.type==t.typeGroup),O.lc(1),O.Vc(\"ngIf\",e.type!=t.typeGroup),O.lc(4),O.Vc(\"text\",e.name)(\"contextInstanceId\",0),O.lc(1),O.Vc(\"ngIf\",e.isblocked),O.lc(1),O.Vc(\"ngIf\",e.ismuted),O.lc(1),O.Vc(\"ngIf\",e.lastmessagedate>0||e.unreadcount),O.lc(1),O.Vc(\"ngIf\",e.subname),O.lc(2),O.Vc(\"ngIf\",e.sentfromcurrentuser),O.lc(1),O.Vc(\"ngIf\",!e.sentfromcurrentuser&&e.type==t.typeGroup&&e.members[0]),O.lc(1),O.Vc(\"text\",e.lastmessage)(\"contextInstanceId\",0)}}function AddonMessagesGroupConversationsPage_ng_template_77_Template(e,n){if(1&e&&O.nd(0,AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_Template,15,15,\"ion-item\",33),2&e){O.Vc(\"ngForOf\",n.conversations)}}const _c4=function(e){return{conversations:e}};let U=(()=>{class AddonMessagesGroupConversationsPage{constructor(e){this.route=e,this.loaded=!1,this.contactRequestsCount=0,this.favourites={type:void 0,favourites:!0,count:0,unread:0,conversations:[]},this.group={type:u.b.MESSAGE_CONVERSATION_TYPE_GROUP,favourites:!1,count:0,unread:0,conversations:[]},this.individual={type:u.b.MESSAGE_CONVERSATION_TYPE_INDIVIDUAL,favourites:!1,count:0,unread:0,conversations:[]},this.typeGroup=u.b.MESSAGE_CONVERSATION_TYPE_GROUP,this.loadingMessage=f.J.instant(\"core.loading\"),this.siteId=g.b.getCurrentSiteId(),this.currentUserId=g.b.getCurrentSiteUserId(),this.newMessagesObserver=l.b.on(u.b.NEW_MESSAGE_EVENT,(e=>{var n;const t=this.getExpandedOption();if(t!=this.getConversationOption(e))return;const s=this.findConversation(e.conversationId,e.userId,t);if(void 0===s)return this.loaded=!1,this.refreshData().finally((()=>{this.loaded=!0})),void 0;if(s.lastmessage!=e.message||s.lastmessagedate!=e.timecreated/1e3){const t=e.timecreated/1e3>(s.lastmessagedate||0);s.lastmessage=e.message,s.lastmessagedate=e.timecreated/1e3;const o=this.getConversationOption(s);o.conversations=u.a.sortConversations(o.conversations||[]),t&&(null===(n=this.content)||void 0===n||n.scrollToTop())}}),this.siteId),this.readChangedObserver=l.b.on(u.b.READ_CHANGED_EVENT,(e=>{if(e.conversationId){const n=this.findConversation(e.conversationId);void 0!==n&&(n.unreadcount=0,u.a.invalidateConversations(this.siteId),u.a.refreshUnreadConversationCounts(this.siteId))}}),this.siteId),this.openConversationObserver=l.b.on(u.b.OPEN_CONVERSATION_EVENT,(e=>{(e.conversationId||e.userId)&&this.gotoConversation(e.conversationId,e.userId)}),this.siteId),this.appResumeSubscription=P.a.resume.subscribe((()=>{this.loaded&&(this.loaded=!1,this.refreshData().finally((()=>{this.loaded=!0})))})),this.updateConversationListObserver=l.b.on(u.b.UPDATE_CONVERSATION_LIST_EVENT,(e=>{if(e&&\"mute\"==e.action){const n=this.getExpandedOption();if(n&&n.conversations){const t=this.findConversation(e.conversationId,void 0,n);t&&(t.ismuted=!!e.value)}}else this.refreshData()}),this.siteId),this.pushObserver=v.a.on(\"receive\").subscribe((e=>{h.a.isFalseOrZero(e.notif)&&e.site==this.siteId&&this.refreshData(void 0,!1)})),this.cronObserver=l.b.on(u.b.UNREAD_CONVERSATION_COUNTS_EVENT,(e=>{this.favourites.unread=e.favourites,this.individual.unread=e.individual+e.self,this.group.unread=e.group}),this.siteId),this.contactRequestsCountObserver=l.b.on(u.b.CONTACT_REQUESTS_COUNT_EVENT,(e=>{this.contactRequestsCount=e.count}),this.siteId),this.memberInfoObserver=l.b.on(u.b.MEMBER_INFO_CHANGED_EVENT,(e=>{if(!e.userBlocked&&!e.userUnblocked)return;const n=this.getExpandedOption();if(n==this.individual||n==this.favourites){if(!n.conversations||n.conversations.length<=0)return;const t=this.findConversation(void 0,e.userId,n);t&&(t.isblocked=e.userBlocked)}}),this.siteId)}ngOnInit(){return Object(d.a)(this,void 0,void 0,(function*(){this.route.queryParams.subscribe((e=>Object(d.a)(this,void 0,void 0,(function*(){const n=C.a.getRouteNumberParam(\"conversationId\",{params:e}),t=C.a.getRouteNumberParam(\"userId\",{params:e});(n||t)&&(this.selectedConversationId=n,this.selectedUserId=t)}))));const e=new M.a;if(yield this.fetchData(),!this.selectedConversationId&&!this.selectedUserId&&i.a.isTablet){let e;const n=this.getExpandedOption();n&&n.conversations.length&&(e=n.conversations[0],e&&(yield this.gotoConversation(e.id)))}e.treatLink()}))}fetchData(e=!0){return Object(d.a)(this,void 0,void 0,(function*(){const n=[];n.push(this.fetchConversationCounts()),n.push(u.a.getContactRequestsCount(this.siteId)),e&&n.push(u.a.refreshUnreadConversationCounts(this.siteId));try{if(yield Promise.all(n),void 0===this.favourites.expanded&&(this.selectedConversationId||this.selectedUserId)){const e=[];e.push(this.fetchDataForOption(this.favourites,!1)),e.push(this.fetchDataForOption(this.group,!1)),e.push(this.fetchDataForOption(this.individual,!1)),yield Promise.all(e);const n=this.findConversation(this.selectedConversationId,this.selectedUserId);if(n){const e=this.getConversationOption(n);return yield this.expandOption(e),this.loaded=!0,void 0}}yield this.fetchDataForExpandedOption()}catch(e){p.a.showErrorModalDefault(e,\"addon.messages.errorwhileretrievingdiscussions\",!0)}this.loaded=!0}))}fetchDataForExpandedOption(){return Object(d.a)(this,void 0,void 0,(function*(){void 0===this.favourites.expanded&&(this.favourites.expanded=0!=this.favourites.count&&!this.group.unread&&!this.individual.unread,this.group.expanded=!this.favourites.expanded&&0!=this.group.count&&!this.individual.unread,this.individual.expanded=!this.favourites.expanded&&!this.group.expanded),this.loadCurrentListElement();const e=this.getExpandedOption();e&&(yield this.fetchDataForOption(e,!1))}))}fetchDataForOption(e,n=!1,t=!1){return Object(d.a)(this,void 0,void 0,(function*(){e.loadMoreError=!1;const s=n?e.conversations.length:0,o=[];let a={conversations:[],canLoadMore:!1},i=[];o.push(u.a.invalidateConversations(this.siteId).then((()=>Object(d.a)(this,void 0,void 0,(function*(){a=yield u.a.getConversations(e.type,e.favourites,s,this.siteId)}))))),n||o.push(_.a.getAllMessages().then((e=>{i=e}))),t&&(o.push(this.fetchConversationCounts()),o.push(u.a.refreshUnreadConversationCounts(this.siteId))),yield Promise.all(o),n?(e.conversations=e.conversations.concat(a.conversations),e.canLoadMore=a.canLoadMore):(e.conversations=a.conversations,e.canLoadMore=a.canLoadMore,i&&i.length&&(yield this.loadOfflineMessages(e,i),e.conversations=u.a.sortConversations(e.conversations)))}))}fetchConversationCounts(){return Object(d.a)(this,void 0,void 0,(function*(){yield u.a.invalidateConversationCounts(this.siteId);const e=yield u.a.getConversationCounts(this.siteId);this.favourites.count=e.favourites,this.individual.count=e.individual+e.self,this.group.count=e.group}))}findConversation(e,n,t){if(e){return(t?t.conversations:this.favourites.conversations.concat(this.group.conversations).concat(this.individual.conversations)).find((n=>n.id==e))}return(t?t.conversations:this.favourites.conversations.concat(this.individual.conversations)).find((e=>e.userid==n))}getExpandedOption(){return this.favourites.expanded?this.favourites:this.group.expanded?this.group:this.individual.expanded?this.individual:void 0}gotoContacts(){C.a.navigateToSitePath(\"contacts\")}gotoConversation(e,n,t){return Object(d.a)(this,void 0,void 0,(function*(){this.selectedConversationId=e,this.selectedUserId=n;const s={};e&&(s.conversationId=e),n&&(s.userId=n),t&&(s.message=t);const o=(C.a.isCurrentPathInTablet(\"**/messages/group-conversations/discussion\")?\"../\":\"\")+\"discussion\";yield C.a.navigate(o,{params:s})}))}gotoSettings(){C.a.navigateToSitePath(\"../message-settings\")}loadMoreConversations(e,n){return Object(d.a)(this,void 0,void 0,(function*(){try{yield this.fetchDataForOption(e,!0)}catch(n){p.a.showErrorModalDefault(n,\"addon.messages.errorwhileretrievingdiscussions\",!0),e.loadMoreError=!0}n&&n()}))}loadOfflineMessages(e,n){return Object(d.a)(this,void 0,void 0,(function*(){const t=[];n.forEach((n=>{var s,o,a,i,r,d,c,l,g,_;if(\"conversationid\"in n){let t=this.findConversation(n.conversationid,void 0,e);t?(null==t.lastmessage||!t.lastmessagepending||(t.lastmessagedate||0)<=n.timecreated/1e3)&&this.addLastOfflineMessage(t,n):(t={id:n.conversationid,type:(null===(s=n.conversation)||void 0===s?void 0:s.type)||u.b.MESSAGE_CONVERSATION_TYPE_INDIVIDUAL,membercount:(null===(o=n.conversation)||void 0===o?void 0:o.membercount)||0,ismuted:(null===(a=n.conversation)||void 0===a?void 0:a.ismuted)||!1,isfavourite:(null===(i=n.conversation)||void 0===i?void 0:i.isfavourite)||!1,isread:(null===(r=n.conversation)||void 0===r?void 0:r.isread)||!1,members:(null===(d=n.conversation)||void 0===d?void 0:d.members)||[],messages:(null===(c=n.conversation)||void 0===c?void 0:c.messages)||[],candeletemessagesforallusers:(null===(l=n.conversation)||void 0===l?void 0:l.candeletemessagesforallusers)||!1,userid:0,name:null===(g=n.conversation)||void 0===g?void 0:g.name,imageurl:(null===(_=n.conversation)||void 0===_?void 0:_.imageurl)||\"\"},this.getConversationOption(t)==e&&(this.addLastOfflineMessage(t,n),this.addOfflineConversation(t)))}else if(e.type==u.b.MESSAGE_CONVERSATION_TYPE_INDIVIDUAL){const s=this.findConversation(void 0,n.touserid,e);n.text=n.smallmessage,s?(s.lastmessagedate||0)<=n.timecreated/1e3&&this.addLastOfflineMessage(s,n):t.push(m.a.getProfile(n.touserid,void 0,!0).catch((()=>{})).then((e=>{const t={id:0,type:u.b.MESSAGE_CONVERSATION_TYPE_INDIVIDUAL,membercount:0,ismuted:!1,isfavourite:!1,isread:!1,members:[],messages:[],candeletemessagesforallusers:!1,userid:n.touserid,name:e?e.fullname:String(n.touserid),imageurl:e?e.profileimageurl:\"\"};this.addLastOfflineMessage(t,n),this.addOfflineConversation(t)})))}})),yield Promise.all(t)}))}addOfflineConversation(e){this.getConversationOption(e).conversations.unshift(e)}addLastOfflineMessage(e,n){e.lastmessage=n.text,e.lastmessagedate=n.timecreated/1e3,e.lastmessagepending=!0,e.sentfromcurrentuser=!0}getConversationOption(e){return e.isfavourite?this.favourites:e.type==u.b.MESSAGE_CONVERSATION_TYPE_GROUP?this.group:this.individual}refreshData(e,n=!0){return Object(d.a)(this,void 0,void 0,(function*(){try{yield u.a.invalidateContactRequestsCountCache(this.siteId)}finally{try{yield this.fetchData(n)}finally{e&&(null==e?void 0:e.complete())}}}))}toggle(e){e.expanded?(e.expanded=!1,this.loadCurrentListElement()):this.expandOption(e,!0).catch((e=>{p.a.showErrorModalDefault(e,\"addon.messages.errorwhileretrievingdiscussions\",!0)}))}expandOption(e,n=!1){return Object(d.a)(this,void 0,void 0,(function*(){this.favourites.expanded=!1,this.group.expanded=!1,this.individual.expanded=!1,e.expanded=!0,e.loading=!0;try{yield this.fetchDataForOption(e,!1,n),this.loadCurrentListElement()}catch(n){throw e.expanded=!1,n}finally{e.loading=!1}}))}loadCurrentListElement(){this.currentListEl=this.favourites.expanded?this.favListEl&&this.favListEl.nativeElement:this.group.expanded?this.groupListEl&&this.groupListEl.nativeElement:this.individual.expanded?this.indListEl&&this.indListEl.nativeElement:void 0}gotoSearch(){C.a.navigateToSitePath(\"search\")}ngOnDestroy(){var e,n,t,s,o,a,i,r,d;null===(e=this.newMessagesObserver)||void 0===e?void 0:e.off(),null===(n=this.appResumeSubscription)||void 0===n||n.unsubscribe(),null===(t=this.pushObserver)||void 0===t||t.unsubscribe(),null===(s=this.readChangedObserver)||void 0===s||s.off(),null===(o=this.cronObserver)||void 0===o||o.off(),null===(a=this.openConversationObserver)||void 0===a||a.off(),null===(i=this.updateConversationListObserver)||void 0===i||i.off(),null===(r=this.contactRequestsCountObserver)||void 0===r||r.off(),null===(d=this.memberInfoObserver)||void 0===d||d.off()}}return AddonMessagesGroupConversationsPage.ɵfac=function AddonMessagesGroupConversationsPage_Factory(e){return new(e||AddonMessagesGroupConversationsPage)(O.yc(s.a))},AddonMessagesGroupConversationsPage.ɵcmp=O.sc({type:AddonMessagesGroupConversationsPage,selectors:[[\"page-addon-messages-group-conversations\"]],viewQuery:function AddonMessagesGroupConversationsPage_Query(e,n){var t;(1&e&&(O.ud(c.v,!0),O.ud(S,!0),O.ud(L,!0),O.ud(R,!0)),2&e)&&(O.dd(t=O.Nc())&&(n.content=t.first),O.dd(t=O.Nc())&&(n.favListEl=t.first),O.dd(t=O.Nc())&&(n.groupListEl=t.first),O.dd(t=O.Nc())&&(n.indListEl=t.first))},decls:79,vars:86,consts:[[\"slot\",\"start\"],[3,\"text\"],[\"slot\",\"end\"],[\"fill\",\"clear\",3,\"click\"],[\"name\",\"fas-search\",\"slot\",\"icon-only\",\"aria-hidden\",\"true\"],[3,\"click\"],[\"name\",\"fas-cog\",\"slot\",\"icon-only\",\"aria-hidden\",\"true\"],[\"slot\",\"fixed\",3,\"disabled\",\"ionRefresh\"],[3,\"pullingText\"],[3,\"hideUntil\",\"message\"],[\"detail\",\"true\",\"button\",\"\",1,\"ion-text-wrap\",\"addon-message-discussion\",3,\"click\"],[\"name\",\"fas-address-book\",\"slot\",\"start\",\"aria-hidden\",\"true\"],[\"slot\",\"end\",\"aria-hidden\",\"true\",4,\"ngIf\"],[\"class\",\"sr-only\",4,\"ngIf\"],[\"button\",\"\",\"sticky\",\"true\",\"aria-controls\",\"addon-messages-groupconversations-favourite\",\"role\",\"heading\",\"detail\",\"false\",1,\"ion-text-wrap\",\"divider\",3,\"click\"],[\"name\",\"fas-chevron-right\",\"flip-rtl\",\"\",\"slot\",\"start\",\"aria-hidden\",\"true\",1,\"expandable-status-icon\"],[\"id\",\"addon-messages-groupconversations-favourite\",3,\"hidden\"],[\"favlist\",\"\"],[4,\"ngTemplateOutlet\",\"ngTemplateOutletContext\"],[3,\"enabled\",\"error\",\"action\"],[\"class\",\"ion-text-wrap\",4,\"ngIf\"],[\"class\",\"ion-text-center\",4,\"ngIf\"],[\"button\",\"\",\"sticky\",\"true\",\"aria-controls\",\"addon-messages-groupconversations-group\",\"role\",\"heading\",\"detail\",\"false\",1,\"divider\",\"ion-text-wrap\",3,\"click\"],[\"id\",\"addon-messages-groupconversations-group\",3,\"hidden\"],[\"grouplist\",\"\"],[\"button\",\"\",\"sticky\",\"true\",\"aria-controls\",\"addon-messages-groupconversations-individual\",\"role\",\"heading\",\"detail\",\"false\",1,\"divider\",\"ion-text-wrap\",3,\"click\"],[\"id\",\"addon-messages-groupconversations-individual\",3,\"hidden\"],[\"indlist\",\"\"],[\"conversationsTemplate\",\"\"],[\"slot\",\"end\",\"aria-hidden\",\"true\"],[1,\"sr-only\"],[1,\"ion-text-wrap\"],[1,\"ion-text-center\"],[\"class\",\"ion-text-wrap addon-message-discussion\",\"button\",\"\",\"detail\",\"false\",3,\"id\",\"click\",4,\"ngFor\",\"ngForOf\"],[\"button\",\"\",\"detail\",\"false\",1,\"ion-text-wrap\",\"addon-message-discussion\",3,\"id\",\"click\"],[\"slot\",\"start\",4,\"ngIf\"],[\"core-user-avatar\",\"\",\"slot\",\"start\",3,\"user\",\"linkProfile\",\"checkOnline\",4,\"ngIf\"],[1,\"flex-row\",\"ion-justify-content-between\"],[1,\"item-heading\"],[\"contextLevel\",\"system\",3,\"text\",\"contextInstanceId\"],[\"name\",\"fas-user-slash\",3,\"title\",4,\"ngIf\"],[\"name\",\"fas-volume-mute\",3,\"title\",4,\"ngIf\"],[4,\"ngIf\"],[1,\"addon-message-last-message\"],[\"class\",\"addon-message-last-message-user\",4,\"ngIf\"],[\"clean\",\"true\",\"singleLine\",\"true\",\"contextLevel\",\"system\",1,\"addon-message-last-message-text\",3,\"text\",\"contextInstanceId\"],[\"core-external-content\",\"\",\"onError\",\"this.src='assets/img/group-avatar.svg'\",3,\"src\",\"alt\"],[\"core-user-avatar\",\"\",\"slot\",\"start\",3,\"user\",\"linkProfile\",\"checkOnline\"],[\"name\",\"fas-user-slash\",3,\"title\"],[\"name\",\"fas-volume-mute\",3,\"title\"],[\"class\",\"addon-message-last-message-date\",4,\"ngIf\"],[\"aria-label\",\"true\",4,\"ngIf\"],[1,\"addon-message-last-message-date\"],[\"aria-label\",\"true\"],[1,\"addon-message-last-message-user\"]],template:function AddonMessagesGroupConversationsPage_Template(e,n){if(1&e&&(O.Ec(0,\"ion-header\"),O.Ec(1,\"ion-toolbar\"),O.Ec(2,\"ion-buttons\",0),O.zc(3,\"ion-back-button\",1),O.Pc(4,\"translate\"),O.Dc(),O.Ec(5,\"ion-title\"),O.Ec(6,\"h1\"),O.pd(7),O.Pc(8,\"translate\"),O.Dc(),O.Dc(),O.Ec(9,\"ion-buttons\",2),O.Ec(10,\"ion-button\",3),O.Mc(\"click\",(function AddonMessagesGroupConversationsPage_Template_ion_button_click_10_listener(){return n.gotoSearch()})),O.Pc(11,\"translate\"),O.zc(12,\"ion-icon\",4),O.Dc(),O.Ec(13,\"ion-button\",5),O.Mc(\"click\",(function AddonMessagesGroupConversationsPage_Template_ion_button_click_13_listener(){return n.gotoSettings()})),O.Pc(14,\"translate\"),O.zc(15,\"ion-icon\",6),O.Dc(),O.zc(16,\"core-user-menu-button\"),O.Dc(),O.Dc(),O.Dc(),O.Ec(17,\"ion-content\"),O.Ec(18,\"core-split-view\"),O.Ec(19,\"ion-refresher\",7),O.Mc(\"ionRefresh\",(function AddonMessagesGroupConversationsPage_Template_ion_refresher_ionRefresh_19_listener(e){return n.refreshData(e.target)})),O.zc(20,\"ion-refresher-content\",8),O.Pc(21,\"translate\"),O.Dc(),O.Ec(22,\"core-loading\",9),O.Ec(23,\"ion-list\"),O.Ec(24,\"ion-item\",10),O.Mc(\"click\",(function AddonMessagesGroupConversationsPage_Template_ion_item_click_24_listener(){return n.gotoContacts()})),O.zc(25,\"ion-icon\",11),O.Ec(26,\"ion-label\"),O.Ec(27,\"h2\"),O.pd(28),O.Pc(29,\"translate\"),O.Dc(),O.Dc(),O.nd(30,AddonMessagesGroupConversationsPage_ion_badge_30_Template,2,1,\"ion-badge\",12),O.nd(31,AddonMessagesGroupConversationsPage_span_31_Template,3,6,\"span\",13),O.Dc(),O.Ec(32,\"ion-item\",14),O.Mc(\"click\",(function AddonMessagesGroupConversationsPage_Template_ion_item_click_32_listener(){return n.toggle(n.favourites)})),O.Pc(33,\"translate\"),O.zc(34,\"ion-icon\",15),O.Ec(35,\"ion-label\"),O.Ec(36,\"h2\"),O.pd(37),O.Pc(38,\"translate\"),O.Dc(),O.Dc(),O.nd(39,AddonMessagesGroupConversationsPage_ion_badge_39_Template,2,1,\"ion-badge\",12),O.nd(40,AddonMessagesGroupConversationsPage_span_40_Template,3,6,\"span\",13),O.Dc(),O.Ec(41,\"div\",16,17),O.nd(43,AddonMessagesGroupConversationsPage_ng_container_43_Template,1,0,\"ng-container\",18),O.Ec(44,\"core-infinite-loading\",19),O.Mc(\"action\",(function AddonMessagesGroupConversationsPage_Template_core_infinite_loading_action_44_listener(e){return n.loadMoreConversations(n.favourites,e)})),O.Dc(),O.nd(45,AddonMessagesGroupConversationsPage_ion_item_45_Template,5,3,\"ion-item\",20),O.Dc(),O.nd(46,AddonMessagesGroupConversationsPage_ion_item_46_Template,4,3,\"ion-item\",21),O.Ec(47,\"ion-item\",22),O.Mc(\"click\",(function AddonMessagesGroupConversationsPage_Template_ion_item_click_47_listener(){return n.toggle(n.group)})),O.Pc(48,\"translate\"),O.zc(49,\"ion-icon\",15),O.Ec(50,\"ion-label\"),O.Ec(51,\"h2\"),O.pd(52),O.Pc(53,\"translate\"),O.Dc(),O.Dc(),O.nd(54,AddonMessagesGroupConversationsPage_ion_badge_54_Template,2,1,\"ion-badge\",12),O.nd(55,AddonMessagesGroupConversationsPage_span_55_Template,3,6,\"span\",13),O.Dc(),O.Ec(56,\"div\",23,24),O.nd(58,AddonMessagesGroupConversationsPage_ng_container_58_Template,1,0,\"ng-container\",18),O.Ec(59,\"core-infinite-loading\",19),O.Mc(\"action\",(function AddonMessagesGroupConversationsPage_Template_core_infinite_loading_action_59_listener(e){return n.loadMoreConversations(n.group,e)})),O.Dc(),O.nd(60,AddonMessagesGroupConversationsPage_ion_item_60_Template,5,3,\"ion-item\",20),O.Dc(),O.nd(61,AddonMessagesGroupConversationsPage_ion_item_61_Template,4,3,\"ion-item\",21),O.Ec(62,\"ion-item\",25),O.Mc(\"click\",(function AddonMessagesGroupConversationsPage_Template_ion_item_click_62_listener(){return n.toggle(n.individual)})),O.Pc(63,\"translate\"),O.zc(64,\"ion-icon\",15),O.Ec(65,\"ion-label\"),O.Ec(66,\"h2\"),O.pd(67),O.Pc(68,\"translate\"),O.Dc(),O.Dc(),O.nd(69,AddonMessagesGroupConversationsPage_ion_badge_69_Template,2,1,\"ion-badge\",12),O.nd(70,AddonMessagesGroupConversationsPage_span_70_Template,3,6,\"span\",13),O.Dc(),O.Ec(71,\"div\",26,27),O.nd(73,AddonMessagesGroupConversationsPage_ng_container_73_Template,1,0,\"ng-container\",18),O.Ec(74,\"core-infinite-loading\",19),O.Mc(\"action\",(function AddonMessagesGroupConversationsPage_Template_core_infinite_loading_action_74_listener(e){return n.loadMoreConversations(n.individual,e)})),O.Dc(),O.nd(75,AddonMessagesGroupConversationsPage_ion_item_75_Template,5,3,\"ion-item\",20),O.Dc(),O.nd(76,AddonMessagesGroupConversationsPage_ion_item_76_Template,4,3,\"ion-item\",21),O.Dc(),O.Dc(),O.Dc(),O.Dc(),O.nd(77,AddonMessagesGroupConversationsPage_ng_template_77_Template,1,1,\"ng-template\",null,28,O.od)),2&e){const e=O.ed(78);O.lc(3),O.Vc(\"text\",O.Qc(4,56,\"core.back\")),O.lc(4),O.qd(O.Qc(8,58,\"addon.messages.messages\")),O.lc(3),O.mc(\"aria-label\",O.Qc(11,60,\"addon.messages.searchcombined\")),O.lc(3),O.mc(\"aria-label\",O.Qc(14,62,\"addon.messages.messagepreferences\")),O.lc(6),O.Vc(\"disabled\",!n.loaded||!n.currentListEl),O.lc(1),O.Wc(\"pullingText\",O.Qc(21,64,\"core.pulltorefresh\")),O.lc(2),O.Vc(\"hideUntil\",n.loaded)(\"message\",n.loadingMessage),O.lc(6),O.qd(O.Qc(29,66,\"addon.messages.contacts\")),O.lc(2),O.Vc(\"ngIf\",n.contactRequestsCount>0),O.lc(1),O.Vc(\"ngIf\",n.contactRequestsCount>0),O.lc(1),O.mc(\"aria-label\",O.Qc(33,68,n.favourites.expanded?\"core.collapse\":\"core.expand\"))(\"aria-expanded\",n.favourites.expanded),O.lc(2),O.qc(\"expandable-status-icon-expanded\",n.favourites.expanded),O.lc(3),O.sd(\"\",O.Qc(38,70,\"core.favourites\"),\" (\",n.favourites.count,\")\"),O.lc(2),O.Vc(\"ngIf\",n.favourites.unread),O.lc(1),O.Vc(\"ngIf\",n.favourites.unread),O.lc(1),O.Vc(\"hidden\",!n.favourites.conversations||!n.favourites.expanded||n.favourites.loading),O.lc(2),O.Vc(\"ngTemplateOutlet\",e)(\"ngTemplateOutletContext\",O.ad(80,_c4,n.favourites.conversations)),O.lc(1),O.Vc(\"enabled\",n.favourites.canLoadMore)(\"error\",n.favourites.loadMoreError),O.lc(1),O.Vc(\"ngIf\",n.favourites.conversations&&0==n.favourites.conversations.length),O.lc(1),O.Vc(\"ngIf\",n.favourites.loading),O.lc(1),O.mc(\"aria-label\",O.Qc(48,72,n.group.expanded?\"core.collapse\":\"core.expand\"))(\"aria-expanded\",n.group.expanded),O.lc(2),O.qc(\"expandable-status-icon-expanded\",n.group.expanded),O.lc(3),O.sd(\"\",O.Qc(53,74,\"addon.messages.groupconversations\"),\" (\",n.group.count,\")\"),O.lc(2),O.Vc(\"ngIf\",n.group.unread),O.lc(1),O.Vc(\"ngIf\",n.group.unread),O.lc(1),O.Vc(\"hidden\",!n.group.conversations||!n.group.expanded||n.group.loading),O.lc(2),O.Vc(\"ngTemplateOutlet\",e)(\"ngTemplateOutletContext\",O.ad(82,_c4,n.group.conversations)),O.lc(1),O.Vc(\"enabled\",n.group.canLoadMore)(\"error\",n.group.loadMoreError),O.lc(1),O.Vc(\"ngIf\",n.group.conversations&&0==n.group.conversations.length),O.lc(1),O.Vc(\"ngIf\",n.group.loading),O.lc(1),O.mc(\"aria-label\",O.Qc(63,76,n.individual.expanded?\"core.collapse\":\"core.expand\"))(\"aria-expanded\",n.individual.expanded),O.lc(2),O.qc(\"expandable-status-icon-expanded\",n.individual.expanded),O.lc(3),O.sd(\"\",O.Qc(68,78,\"addon.messages.individualconversations\"),\" (\",n.individual.count,\")\"),O.lc(2),O.Vc(\"ngIf\",n.individual.unread),O.lc(1),O.Vc(\"ngIf\",n.individual.unread),O.lc(1),O.Vc(\"hidden\",!n.individual.conversations||!n.individual.expanded||n.individual.loading),O.lc(2),O.Vc(\"ngTemplateOutlet\",e)(\"ngTemplateOutletContext\",O.ad(84,_c4,n.individual.conversations)),O.lc(1),O.Vc(\"enabled\",n.individual.canLoadMore)(\"error\",n.individual.loadMoreError),O.lc(1),O.Vc(\"ngIf\",n.individual.conversations&&0==n.individual.conversations.length),O.lc(1),O.Vc(\"ngIf\",n.individual.loading)}},directives:[c.C,c.Ab,c.m,c.h,c.i,c.yb,b.a,c.l,c.D,E.a,A.a,T.a,c.v,x.a,c.bb,c.cb,I.a,c.P,c.I,c.O,G.t,G.A,D.a,c.k,c.qb,G.s,y.a,c.g,V.a,k.a,c.W],pipes:[w.d,N.a],styles:[\"[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]{margin-right:0;margin-left:0}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   core-format-text[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   core-format-text[_ngcontent-%COMP%]{font-weight:700}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{margin-left:2px}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{margin-left:unset;-webkit-margin-start:2px;margin-inline-start:2px}}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-self:flex-start;margin-left:2px}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]{margin-left:unset;-webkit-margin-start:2px;margin-inline-start:2px}}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{margin-top:3px;align-self:flex-end}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   .addon-message-last-message-date[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   .addon-message-last-message-date[_ngcontent-%COMP%]{white-space:nowrap;font-size:11px}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message[_ngcontent-%COMP%]{display:flex;justify-content:flex-start}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%]{white-space:nowrap;color:var(--ion-text-color);margin-right:2px}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%]{margin-right:unset;-webkit-margin-end:2px;margin-inline-end:2px}}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-text[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-text[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;flex-shrink:1}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]{margin-top:10px}[_nghost-%COMP%]   ion-item-divider[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%]{margin-left:16px;margin-right:16px}\"]}),AddonMessagesGroupConversationsPage})();var q=t(\"OQOI\"),Q=t(\"dQ3M\");const z=[{path:\"\",data:{mainMenuTabRoot:q.b.PAGE_NAME},component:U},a.AddonMessagesDiscussionRoute],j=[{path:\"\",data:{mainMenuTabRoot:q.b.PAGE_NAME},component:U,children:[a.AddonMessagesDiscussionRoute]}],F=[...Object(o.c)(z,(()=>i.a.isMobile)),...Object(o.c)(j,(()=>i.a.isTablet))];let Y=(()=>{class AddonMessagesGroupConversationsPageModule{}return AddonMessagesGroupConversationsPageModule.ɵmod=O.wc({type:AddonMessagesGroupConversationsPageModule}),AddonMessagesGroupConversationsPageModule.ɵinj=O.vc({factory:function AddonMessagesGroupConversationsPageModule_Factory(e){return new(e||AddonMessagesGroupConversationsPageModule)},imports:[[s.m.forChild(F),r.a,Q.a],s.m]}),AddonMessagesGroupConversationsPageModule})();void((\"undefined\"==typeof ngJitMode||ngJitMode)&&O.kd(Y,{declarations:[U],imports:[s.m,r.a,Q.a],exports:[s.m]}))}}]);","name":"49.761028576794d50c8340.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[49],{\n\n/***/ \"twN0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"AddonMessagesGroupConversationsPageModule\", function() { return /* binding */ group_conversations_module_AddonMessagesGroupConversationsPageModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 10 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./src/app/app-routing.module.ts\nvar app_routing_module = __webpack_require__(\"vY5A\");\n\n// EXTERNAL MODULE: ./src/addons/messages/messages-lazy.module.ts + 1 modules\nvar messages_lazy_module = __webpack_require__(\"muSn\");\n\n// EXTERNAL MODULE: ./src/core/services/screen.ts\nvar screen = __webpack_require__(\"Y+03\");\n\n// EXTERNAL MODULE: ./src/core/shared.module.ts + 3 modules\nvar shared_module = __webpack_require__(\"L3Fv\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js + 5 modules\nvar ionic_angular = __webpack_require__(\"TEn/\");\n\n// EXTERNAL MODULE: ./src/core/singletons/events.ts\nvar events = __webpack_require__(\"fjkH\");\n\n// EXTERNAL MODULE: ./src/core/services/sites.ts\nvar sites = __webpack_require__(\"9+EE\");\n\n// EXTERNAL MODULE: ./src/addons/messages/services/messages.ts\nvar services_messages = __webpack_require__(\"KMk0\");\n\n// EXTERNAL MODULE: ./src/addons/messages/services/messages-offline.ts\nvar messages_offline = __webpack_require__(\"nopL\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/dom.ts + 2 modules\nvar dom = __webpack_require__(\"3LXp\");\n\n// EXTERNAL MODULE: ./src/core/features/user/services/user.ts\nvar services_user = __webpack_require__(\"4pns\");\n\n// EXTERNAL MODULE: ./src/core/features/pushnotifications/services/push-delegate.ts\nvar push_delegate = __webpack_require__(\"2eZG\");\n\n// EXTERNAL MODULE: ./src/core/singletons/index.ts\nvar singletons = __webpack_require__(\"j3ag\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/utils.ts\nvar utils = __webpack_require__(\"bFG1\");\n\n// EXTERNAL MODULE: ./src/core/services/navigator.ts\nvar services_navigator = __webpack_require__(\"pHTc\");\n\n// EXTERNAL MODULE: ./src/core/features/mainmenu/classes/deep-link-manager.ts\nvar deep_link_manager = __webpack_require__(\"YyYz\");\n\n// EXTERNAL MODULE: ./src/core/services/platform.ts\nvar platform = __webpack_require__(\"r2Z7\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./src/core/directives/update-non-reactive-attributes.ts\nvar update_non_reactive_attributes = __webpack_require__(\"ACYt\");\n\n// EXTERNAL MODULE: ./src/core/directives/fa-icon.ts\nvar fa_icon = __webpack_require__(\"3CSS\");\n\n// EXTERNAL MODULE: ./src/core/features/mainmenu/components/user-menu-button/user-menu-button.ts\nvar user_menu_button = __webpack_require__(\"C1x5\");\n\n// EXTERNAL MODULE: ./src/core/directives/content.ts\nvar content = __webpack_require__(\"nt/U\");\n\n// EXTERNAL MODULE: ./src/core/components/split-view/split-view.ts\nvar split_view = __webpack_require__(\"46ml\");\n\n// EXTERNAL MODULE: ./src/core/components/loading/loading.ts\nvar loading = __webpack_require__(\"PgjG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./src/core/components/infinite-loading/infinite-loading.ts\nvar infinite_loading = __webpack_require__(\"xpMl\");\n\n// EXTERNAL MODULE: ./src/core/directives/format-text.ts\nvar format_text = __webpack_require__(\"hMzs\");\n\n// EXTERNAL MODULE: ./src/core/directives/external-content.ts\nvar external_content = __webpack_require__(\"NcPy\");\n\n// EXTERNAL MODULE: ./src/core/components/user-avatar/user-avatar.ts\nvar user_avatar = __webpack_require__(\"FeAf\");\n\n// EXTERNAL MODULE: ./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js + 8 modules\nvar ngx_translate_core = __webpack_require__(\"sYmb\");\n\n// EXTERNAL MODULE: ./src/core/pipes/date-day-or-time.ts\nvar date_day_or_time = __webpack_require__(\"Cg42\");\n\n// CONCATENATED MODULE: ./src/addons/messages/pages/group-conversations/group-conversations.page.ts\n\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst _c0 = [\"favlist\"];\nconst _c1 = [\"grouplist\"];\nconst _c2 = [\"indlist\"];\nfunction AddonMessagesGroupConversationsPage_ion_badge_30_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-badge\", 29);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qd\" /* ɵɵtextInterpolate */](ctx_r0.contactRequestsCount);\n    }\n}\nconst _c3 = function (a0) { return { $a: a0 }; };\nfunction AddonMessagesGroupConversationsPage_span_31_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 30);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Rc\" /* ɵɵpipeBind2 */](2, 1, \"addon.messages.pendingcontactrequests\", core[\"ad\" /* ɵɵpureFunction1 */](4, _c3, ctx_r1.contactRequestsCount)), \" \");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_badge_39_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-badge\", 29);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qd\" /* ɵɵtextInterpolate */](ctx_r2.favourites.unread);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_span_40_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 30);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Rc\" /* ɵɵpipeBind2 */](2, 1, \"addon.messages.unreadconversations\", core[\"ad\" /* ɵɵpureFunction1 */](4, _c3, ctx_r3.favourites.unread)), \" \");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_container_43_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵelementContainer */](0);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_item_45_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 31);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](2, \"p\");\n        core[\"pd\" /* ɵɵtext */](3);\n        core[\"Pc\" /* ɵɵpipe */](4, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](4, 1, \"addon.messages.nofavourites\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_item_46_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 32);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"zc\" /* ɵɵelement */](2, \"ion-spinner\");\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](3, 1, \"core.loading\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_badge_54_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-badge\", 29);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r8 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qd\" /* ɵɵtextInterpolate */](ctx_r8.group.unread);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_span_55_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 30);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r9 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Rc\" /* ɵɵpipeBind2 */](2, 1, \"addon.messages.unreadconversations\", core[\"ad\" /* ɵɵpureFunction1 */](4, _c3, ctx_r9.group.unread)), \" \");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_container_58_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵelementContainer */](0);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_item_60_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 31);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](2, \"p\");\n        core[\"pd\" /* ɵɵtext */](3);\n        core[\"Pc\" /* ɵɵpipe */](4, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](4, 1, \"addon.messages.nogroupconversations\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_item_61_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 32);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"zc\" /* ɵɵelement */](2, \"ion-spinner\");\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](3, 1, \"core.loading\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_badge_69_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-badge\", 29);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r14 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qd\" /* ɵɵtextInterpolate */](ctx_r14.individual.unread);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_span_70_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 30);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r15 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Rc\" /* ɵɵpipeBind2 */](2, 1, \"addon.messages.unreadconversations\", core[\"ad\" /* ɵɵpureFunction1 */](4, _c3, ctx_r15.individual.unread)), \" \");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_container_73_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵelementContainer */](0);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_item_75_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 31);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](2, \"p\");\n        core[\"pd\" /* ɵɵtext */](3);\n        core[\"Pc\" /* ɵɵpipe */](4, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](4, 1, \"addon.messages.noindividualconversations\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ion_item_76_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 32);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"zc\" /* ɵɵelement */](2, \"ion-spinner\");\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](3, 1, \"core.loading\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_avatar_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-avatar\", 0);\n        core[\"zc\" /* ɵɵelement */](1, \"img\", 46);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */]().$implicit;\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"src\", conversation_r24.imageurl, core[\"id\" /* ɵɵsanitizeUrl */])(\"alt\", conversation_r24.name);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_core_user_avatar_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"zc\" /* ɵɵelement */](0, \"core-user-avatar\", 47);\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */]().$implicit;\n        core[\"Vc\" /* ɵɵproperty */](\"user\", conversation_r24.otherUser)(\"linkProfile\", false)(\"checkOnline\", conversation_r24.showonlinestatus);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_7_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"zc\" /* ɵɵelement */](0, \"ion-icon\", 48);\n        core[\"Pc\" /* ɵɵpipe */](1, \"translate\");\n    }\n    if (rf & 2) {\n        core[\"Vc\" /* ɵɵproperty */](\"title\", core[\"Qc\" /* ɵɵpipeBind1 */](1, 1, \"addon.messages.contactblocked\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_8_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"zc\" /* ɵɵelement */](0, \"ion-icon\", 49);\n        core[\"Pc\" /* ɵɵpipe */](1, \"translate\");\n    }\n    if (rf & 2) {\n        core[\"Vc\" /* ɵɵproperty */](\"title\", core[\"Qc\" /* ɵɵpipeBind1 */](1, 1, \"addon.messages.mutedconversation\"));\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 52);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"coreDateDayOrTime\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */](2).$implicit;\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Qc\" /* ɵɵpipeBind1 */](2, 1, conversation_r24.lastmessagedate), \" \");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_ion_badge_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-badge\", 53);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */](2).$implicit;\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qd\" /* ɵɵtextInterpolate */](conversation_r24.unreadcount);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 30);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */](2).$implicit;\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Rc\" /* ɵɵpipeBind2 */](2, 1, \"addon.messages.unreadmessages\", core[\"ad\" /* ɵɵpureFunction1 */](4, _c3, conversation_r24.unreadcount)), \" \");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-note\");\n        core[\"nd\" /* ɵɵtemplate */](1, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_1_Template, 3, 3, \"span\", 50);\n        core[\"nd\" /* ɵɵtemplate */](2, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_ion_badge_2_Template, 2, 1, \"ion-badge\", 51);\n        core[\"nd\" /* ɵɵtemplate */](3, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_span_3_Template, 3, 6, \"span\", 13);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */]().$implicit;\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.lastmessagedate > 0);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.unreadcount > 0);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.unreadcount > 0);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_p_10_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"p\");\n        core[\"zc\" /* ɵɵelement */](1, \"core-format-text\", 39);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */]().$implicit;\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"text\", conversation_r24.subname)(\"contextInstanceId\", 0);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_12_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 54);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Qc\" /* ɵɵpipeBind1 */](2, 1, \"addon.messages.you\"), \" \");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_13_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\", 54);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = core[\"Oc\" /* ɵɵnextContext */]().$implicit;\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qd\" /* ɵɵtextInterpolate */](conversation_r24.members[0].fullname + \":\");\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r45 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 34);\n        core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_Template_ion_item_click_0_listener() { core[\"fd\" /* ɵɵrestoreView */](_r45); const conversation_r24 = ctx.$implicit; const ctx_r44 = core[\"Oc\" /* ɵɵnextContext */](2); return ctx_r44.gotoConversation(conversation_r24.id, conversation_r24.userid); });\n        core[\"nd\" /* ɵɵtemplate */](1, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_avatar_1_Template, 2, 2, \"ion-avatar\", 35);\n        core[\"nd\" /* ɵɵtemplate */](2, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_core_user_avatar_2_Template, 1, 3, \"core-user-avatar\", 36);\n        core[\"Ec\" /* ɵɵelementStart */](3, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](4, \"div\", 37);\n        core[\"Ec\" /* ɵɵelementStart */](5, \"p\", 38);\n        core[\"zc\" /* ɵɵelement */](6, \"core-format-text\", 39);\n        core[\"nd\" /* ɵɵtemplate */](7, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_7_Template, 2, 3, \"ion-icon\", 40);\n        core[\"nd\" /* ɵɵtemplate */](8, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_icon_8_Template, 2, 3, \"ion-icon\", 41);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"nd\" /* ɵɵtemplate */](9, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_ion_note_9_Template, 4, 3, \"ion-note\", 42);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"nd\" /* ɵɵtemplate */](10, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_p_10_Template, 2, 2, \"p\", 42);\n        core[\"Ec\" /* ɵɵelementStart */](11, \"p\", 43);\n        core[\"nd\" /* ɵɵtemplate */](12, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_12_Template, 3, 3, \"span\", 44);\n        core[\"nd\" /* ɵɵtemplate */](13, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_span_13_Template, 2, 1, \"span\", 44);\n        core[\"zc\" /* ɵɵelement */](14, \"core-format-text\", 45);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const conversation_r24 = ctx.$implicit;\n        const ctx_r23 = core[\"Oc\" /* ɵɵnextContext */](2);\n        core[\"Xc\" /* ɵɵpropertyInterpolate1 */](\"id\", \"addon-message-conversation-\", conversation_r24.id ? conversation_r24.id : \"user-\" + conversation_r24.userid, \"\");\n        core[\"mc\" /* ɵɵattribute */](\"aria-current\", conversation_r24.id && conversation_r24.id == ctx_r23.selectedConversationId || conversation_r24.userid && conversation_r24.userid == ctx_r23.selectedUserId ? \"page\" : \"false\")(\"aria-label\", conversation_r24.name);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.type == ctx_r23.typeGroup);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.type != ctx_r23.typeGroup);\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"Vc\" /* ɵɵproperty */](\"text\", conversation_r24.name)(\"contextInstanceId\", 0);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.isblocked);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.ismuted);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.lastmessagedate > 0 || conversation_r24.unreadcount);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.subname);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", conversation_r24.sentfromcurrentuser);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", !conversation_r24.sentfromcurrentuser && conversation_r24.type == ctx_r23.typeGroup && conversation_r24.members[0]);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"text\", conversation_r24.lastmessage)(\"contextInstanceId\", 0);\n    }\n}\nfunction AddonMessagesGroupConversationsPage_ng_template_77_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"nd\" /* ɵɵtemplate */](0, AddonMessagesGroupConversationsPage_ng_template_77_ion_item_0_Template, 15, 15, \"ion-item\", 33);\n    }\n    if (rf & 2) {\n        const conversations_r22 = ctx.conversations;\n        core[\"Vc\" /* ɵɵproperty */](\"ngForOf\", conversations_r22);\n    }\n}\nconst _c4 = function (a0) { return { conversations: a0 }; };\n/**\n * Page that displays the list of conversations, including group conversations.\n */\nlet group_conversations_page_AddonMessagesGroupConversationsPage = /*@__PURE__*/ (() => {\n    class AddonMessagesGroupConversationsPage {\n        constructor(route) {\n            this.route = route;\n            this.loaded = false;\n            this.contactRequestsCount = 0;\n            this.favourites = {\n                type: undefined,\n                favourites: true,\n                count: 0,\n                unread: 0,\n                conversations: [],\n            };\n            this.group = {\n                type: services_messages[\"b\" /* AddonMessagesProvider */].MESSAGE_CONVERSATION_TYPE_GROUP,\n                favourites: false,\n                count: 0,\n                unread: 0,\n                conversations: [],\n            };\n            this.individual = {\n                type: services_messages[\"b\" /* AddonMessagesProvider */].MESSAGE_CONVERSATION_TYPE_INDIVIDUAL,\n                favourites: false,\n                count: 0,\n                unread: 0,\n                conversations: [],\n            };\n            this.typeGroup = services_messages[\"b\" /* AddonMessagesProvider */].MESSAGE_CONVERSATION_TYPE_GROUP;\n            this.loadingMessage = singletons[\"J\" /* Translate */].instant('core.loading');\n            this.siteId = sites[\"b\" /* CoreSites */].getCurrentSiteId();\n            this.currentUserId = sites[\"b\" /* CoreSites */].getCurrentSiteUserId();\n            // Update conversations when new message is received.\n            this.newMessagesObserver = events[\"b\" /* CoreEvents */].on(services_messages[\"b\" /* AddonMessagesProvider */].NEW_MESSAGE_EVENT, (data) => {\n                var _a;\n                // Check if the new message belongs to the option that is currently expanded.\n                const expandedOption = this.getExpandedOption();\n                const messageOption = this.getConversationOption(data);\n                if (expandedOption != messageOption) {\n                    return; // Message doesn't belong to current list, stop.\n                }\n                // Search the conversation to update.\n                const conversation = this.findConversation(data.conversationId, data.userId, expandedOption);\n                if (conversation === undefined) {\n                    // Probably a new conversation, refresh the list.\n                    this.loaded = false;\n                    this.refreshData().finally(() => {\n                        this.loaded = true;\n                    });\n                    return;\n                }\n                if (conversation.lastmessage != data.message || conversation.lastmessagedate != data.timecreated / 1000) {\n                    const isNewer = data.timecreated / 1000 > (conversation.lastmessagedate || 0);\n                    // An existing conversation has a new message, update the last message.\n                    conversation.lastmessage = data.message;\n                    conversation.lastmessagedate = data.timecreated / 1000;\n                    // Sort the affected list.\n                    const option = this.getConversationOption(conversation);\n                    option.conversations = services_messages[\"a\" /* AddonMessages */].sortConversations(option.conversations || []);\n                    if (isNewer) {\n                        // The last message is newer than the previous one, scroll to top to keep viewing the conversation.\n                        (_a = this.content) === null || _a === void 0 ? void 0 : _a.scrollToTop();\n                    }\n                }\n            }, this.siteId);\n            // Update conversations when a message is read.\n            this.readChangedObserver = events[\"b\" /* CoreEvents */].on(services_messages[\"b\" /* AddonMessagesProvider */].READ_CHANGED_EVENT, (data) => {\n                if (data.conversationId) {\n                    const conversation = this.findConversation(data.conversationId);\n                    if (conversation !== undefined) {\n                        // A conversation has been read reset counter.\n                        conversation.unreadcount = 0;\n                        // Conversations changed, invalidate them and refresh unread counts.\n                        services_messages[\"a\" /* AddonMessages */].invalidateConversations(this.siteId);\n                        services_messages[\"a\" /* AddonMessages */].refreshUnreadConversationCounts(this.siteId);\n                    }\n                }\n            }, this.siteId);\n            // Load a discussion if we receive an event to do so.\n            this.openConversationObserver = events[\"b\" /* CoreEvents */].on(services_messages[\"b\" /* AddonMessagesProvider */].OPEN_CONVERSATION_EVENT, (data) => {\n                if (data.conversationId || data.userId) {\n                    this.gotoConversation(data.conversationId, data.userId);\n                }\n            }, this.siteId);\n            // Refresh the view when the app is resumed.\n            this.appResumeSubscription = platform[\"a\" /* CorePlatform */].resume.subscribe(() => {\n                if (!this.loaded) {\n                    return;\n                }\n                this.loaded = false;\n                this.refreshData().finally(() => {\n                    this.loaded = true;\n                });\n            });\n            // Update conversations if we receive an event to do so.\n            this.updateConversationListObserver = events[\"b\" /* CoreEvents */].on(services_messages[\"b\" /* AddonMessagesProvider */].UPDATE_CONVERSATION_LIST_EVENT, (data) => {\n                if (data && data.action == 'mute') {\n                    // If the conversation is displayed, change its muted value.\n                    const expandedOption = this.getExpandedOption();\n                    if (expandedOption && expandedOption.conversations) {\n                        const conversation = this.findConversation(data.conversationId, undefined, expandedOption);\n                        if (conversation) {\n                            conversation.ismuted = !!data.value;\n                        }\n                    }\n                    return;\n                }\n                this.refreshData();\n            }, this.siteId);\n            // If a message push notification is received, refresh the view.\n            this.pushObserver = push_delegate[\"a\" /* CorePushNotificationsDelegate */].on('receive')\n                .subscribe((notification) => {\n                // New message received. If it's from current site, refresh the data.\n                if (utils[\"a\" /* CoreUtils */].isFalseOrZero(notification.notif) && notification.site == this.siteId) {\n                    // Don't refresh unread counts, it's refreshed from the main menu handler in this case.\n                    this.refreshData(undefined, false);\n                }\n            });\n            // Update unread conversation counts.\n            this.cronObserver = events[\"b\" /* CoreEvents */].on(services_messages[\"b\" /* AddonMessagesProvider */].UNREAD_CONVERSATION_COUNTS_EVENT, (data) => {\n                this.favourites.unread = data.favourites;\n                this.individual.unread = data.individual + data.self; // Self is only returned if it's not favourite.\n                this.group.unread = data.group;\n            }, this.siteId);\n            // Update the contact requests badge.\n            this.contactRequestsCountObserver = events[\"b\" /* CoreEvents */].on(services_messages[\"b\" /* AddonMessagesProvider */].CONTACT_REQUESTS_COUNT_EVENT, (data) => {\n                this.contactRequestsCount = data.count;\n            }, this.siteId);\n            // Update block status of a user.\n            this.memberInfoObserver = events[\"b\" /* CoreEvents */].on(services_messages[\"b\" /* AddonMessagesProvider */].MEMBER_INFO_CHANGED_EVENT, (data) => {\n                if (!data.userBlocked && !data.userUnblocked) {\n                    // The block status has not changed, ignore.\n                    return;\n                }\n                const expandedOption = this.getExpandedOption();\n                if (expandedOption == this.individual || expandedOption == this.favourites) {\n                    if (!expandedOption.conversations || expandedOption.conversations.length <= 0) {\n                        return;\n                    }\n                    const conversation = this.findConversation(undefined, data.userId, expandedOption);\n                    if (conversation) {\n                        conversation.isblocked = data.userBlocked;\n                    }\n                }\n            }, this.siteId);\n        }\n        /**\n         * Component loaded.\n         */\n        ngOnInit() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                this.route.queryParams.subscribe((params) => Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                    // When a child page loads this callback is triggered too.\n                    const conversationId = services_navigator[\"a\" /* CoreNavigator */].getRouteNumberParam('conversationId', { params });\n                    const userId = services_navigator[\"a\" /* CoreNavigator */].getRouteNumberParam('userId', { params });\n                    if (conversationId || userId) {\n                        // Update the selected ones.\n                        this.selectedConversationId = conversationId;\n                        this.selectedUserId = userId;\n                    }\n                }));\n                const deepLinkManager = new deep_link_manager[\"a\" /* CoreMainMenuDeepLinkManager */]();\n                yield this.fetchData();\n                if (!this.selectedConversationId && !this.selectedUserId && screen[\"a\" /* CoreScreen */].isTablet) {\n                    // Load the first conversation.\n                    let conversation;\n                    const expandedOption = this.getExpandedOption();\n                    if (expandedOption && expandedOption.conversations.length) {\n                        conversation = expandedOption.conversations[0];\n                        if (conversation) {\n                            yield this.gotoConversation(conversation.id);\n                        }\n                    }\n                }\n                // Treat deep link now that the conversation route has been loaded if needed.\n                deepLinkManager.treatLink();\n            });\n        }\n        /**\n         * Fetch conversations.\n         *\n         * @param refreshUnreadCounts Whether to refresh unread counts.\n         * @return Promise resolved when done.\n         */\n        fetchData(refreshUnreadCounts = true) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                // Load the amount of conversations and contact requests.\n                const promises = [];\n                promises.push(this.fetchConversationCounts());\n                // View updated by the events observers.\n                promises.push(services_messages[\"a\" /* AddonMessages */].getContactRequestsCount(this.siteId));\n                if (refreshUnreadCounts) {\n                    promises.push(services_messages[\"a\" /* AddonMessages */].refreshUnreadConversationCounts(this.siteId));\n                }\n                try {\n                    yield Promise.all(promises);\n                    // The expanded status hasn't been initialized. Do it now.\n                    if (this.favourites.expanded === undefined && (this.selectedConversationId || this.selectedUserId)) {\n                        // A certain conversation should be opened.\n                        // We don't know which option it belongs to, so we need to fetch the data for all of them.\n                        const promises = [];\n                        promises.push(this.fetchDataForOption(this.favourites, false));\n                        promises.push(this.fetchDataForOption(this.group, false));\n                        promises.push(this.fetchDataForOption(this.individual, false));\n                        yield Promise.all(promises);\n                        // All conversations have been loaded, find the one we need to load and expand its option.\n                        const conversation = this.findConversation(this.selectedConversationId, this.selectedUserId);\n                        if (conversation) {\n                            const option = this.getConversationOption(conversation);\n                            yield this.expandOption(option);\n                            this.loaded = true;\n                            return;\n                        }\n                    }\n                    // Load the data for the expanded option.\n                    yield this.fetchDataForExpandedOption();\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(error, 'addon.messages.errorwhileretrievingdiscussions', true);\n                }\n                this.loaded = true;\n            });\n        }\n        /**\n         * Fetch data for the expanded option.\n         *\n         * @return Promise resolved when done.\n         */\n        fetchDataForExpandedOption() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                if (this.favourites.expanded === undefined) {\n                    // Calculate which option should be expanded initially.\n                    this.favourites.expanded = this.favourites.count != 0 && !this.group.unread && !this.individual.unread;\n                    this.group.expanded = !this.favourites.expanded && this.group.count != 0 && !this.individual.unread;\n                    this.individual.expanded = !this.favourites.expanded && !this.group.expanded;\n                }\n                this.loadCurrentListElement();\n                const expandedOption = this.getExpandedOption();\n                if (expandedOption) {\n                    yield this.fetchDataForOption(expandedOption, false);\n                }\n            });\n        }\n        /**\n         * Fetch data for a certain option.\n         *\n         * @param option The option to fetch data for.\n         * @param loadingMore Whether we are loading more data or just the first ones.\n         * @param getCounts Whether to get counts data.\n         * @return Promise resolved when done.\n         */\n        fetchDataForOption(option, loadingMore = false, getCounts = false) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                option.loadMoreError = false;\n                const limitFrom = loadingMore ? option.conversations.length : 0;\n                const promises = [];\n                let data = {\n                    conversations: [],\n                    canLoadMore: false,\n                };\n                let offlineMessages = [];\n                // Get the conversations and, if needed, the offline messages. Always try to get the latest data.\n                promises.push(services_messages[\"a\" /* AddonMessages */].invalidateConversations(this.siteId).then(() => Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                    data = yield services_messages[\"a\" /* AddonMessages */].getConversations(option.type, option.favourites, limitFrom, this.siteId);\n                    return;\n                })));\n                if (!loadingMore) {\n                    promises.push(messages_offline[\"a\" /* AddonMessagesOffline */].getAllMessages().then((messages) => {\n                        offlineMessages = messages;\n                        return;\n                    }));\n                }\n                if (getCounts) {\n                    promises.push(this.fetchConversationCounts());\n                    promises.push(services_messages[\"a\" /* AddonMessages */].refreshUnreadConversationCounts(this.siteId));\n                }\n                yield Promise.all(promises);\n                if (loadingMore) {\n                    option.conversations = option.conversations.concat(data.conversations);\n                    option.canLoadMore = data.canLoadMore;\n                }\n                else {\n                    option.conversations = data.conversations;\n                    option.canLoadMore = data.canLoadMore;\n                    if (offlineMessages && offlineMessages.length) {\n                        yield this.loadOfflineMessages(option, offlineMessages);\n                        // Sort the conversations, the offline messages could affect the order.\n                        option.conversations = services_messages[\"a\" /* AddonMessages */].sortConversations(option.conversations);\n                    }\n                }\n            });\n        }\n        /**\n         * Fetch conversation counts.\n         *\n         * @return Promise resolved when done.\n         */\n        fetchConversationCounts() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                // Always try to get the latest data.\n                yield services_messages[\"a\" /* AddonMessages */].invalidateConversationCounts(this.siteId);\n                const counts = yield services_messages[\"a\" /* AddonMessages */].getConversationCounts(this.siteId);\n                this.favourites.count = counts.favourites;\n                this.individual.count = counts.individual + counts.self; // Self is only returned if it's not favourite.\n                this.group.count = counts.group;\n            });\n        }\n        /**\n         * Find a conversation in the list of loaded conversations.\n         *\n         * @param conversationId The conversation ID to search.\n         * @param userId User ID to search (if no conversationId).\n         * @param option The option to search in. If not defined, search in all options.\n         * @return Conversation.\n         */\n        findConversation(conversationId, userId, option) {\n            if (conversationId) {\n                const conversations = option\n                    ? option.conversations\n                    : (this.favourites.conversations.concat(this.group.conversations).concat(this.individual.conversations));\n                return conversations.find((conv) => conv.id == conversationId);\n            }\n            const conversations = option\n                ? option.conversations\n                : this.favourites.conversations.concat(this.individual.conversations);\n            return conversations.find((conv) => conv.userid == userId);\n        }\n        /**\n         * Get the option that is currently expanded, undefined if they are all collapsed.\n         *\n         * @return Option currently expanded.\n         */\n        getExpandedOption() {\n            if (this.favourites.expanded) {\n                return this.favourites;\n            }\n            else if (this.group.expanded) {\n                return this.group;\n            }\n            else if (this.individual.expanded) {\n                return this.individual;\n            }\n        }\n        /**\n         * Navigate to contacts view.\n         */\n        gotoContacts() {\n            services_navigator[\"a\" /* CoreNavigator */].navigateToSitePath('contacts');\n        }\n        /**\n         * Navigate to a particular conversation.\n         *\n         * @param conversationId Conversation Id to load.\n         * @param userId User of the conversation. Only if there is no conversationId.\n         * @param messageId Message to scroll after loading the discussion. Used when searching.\n         */\n        gotoConversation(conversationId, userId, messageId) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                this.selectedConversationId = conversationId;\n                this.selectedUserId = userId;\n                const params = {};\n                if (conversationId) {\n                    params.conversationId = conversationId;\n                }\n                if (userId) {\n                    params.userId = userId;\n                }\n                if (messageId) {\n                    params.message = messageId;\n                }\n                const splitViewLoaded = services_navigator[\"a\" /* CoreNavigator */].isCurrentPathInTablet('**/messages/group-conversations/discussion');\n                const path = (splitViewLoaded ? '../' : '') + 'discussion';\n                yield services_navigator[\"a\" /* CoreNavigator */].navigate(path, { params });\n            });\n        }\n        /**\n         * Navigate to message settings.\n         */\n        gotoSettings() {\n            services_navigator[\"a\" /* CoreNavigator */].navigateToSitePath('../message-settings');\n        }\n        /**\n         * Function to load more conversations.\n         *\n         * @param option The option to fetch data for.\n         * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n         * @return Promise resolved when done.\n         */\n        loadMoreConversations(option, infiniteComplete) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    yield this.fetchDataForOption(option, true);\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(error, 'addon.messages.errorwhileretrievingdiscussions', true);\n                    option.loadMoreError = true;\n                }\n                infiniteComplete && infiniteComplete();\n            });\n        }\n        /**\n         * Load offline messages into the conversations.\n         *\n         * @param option The option where the messages should be loaded.\n         * @param messages Offline messages.\n         * @return Promise resolved when done.\n         */\n        loadOfflineMessages(option, messages) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                const promises = [];\n                messages.forEach((message) => {\n                    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n                    if ('conversationid' in message) {\n                        // It's an existing conversation. Search it in the current option.\n                        let conversation = this.findConversation(message.conversationid, undefined, option);\n                        if (conversation) {\n                            // Check if it's the last message. Offline messages are considered more recent than sent messages.\n                            if (conversation.lastmessage === undefined || conversation.lastmessage === null ||\n                                !conversation.lastmessagepending || (conversation.lastmessagedate || 0) <= message.timecreated / 1000) {\n                                this.addLastOfflineMessage(conversation, message);\n                            }\n                        }\n                        else {\n                            // Conversation not found, it could be an old one or the message could belong to another option.\n                            conversation = {\n                                id: message.conversationid,\n                                type: ((_a = message.conversation) === null || _a === void 0 ? void 0 : _a.type) || services_messages[\"b\" /* AddonMessagesProvider */].MESSAGE_CONVERSATION_TYPE_INDIVIDUAL,\n                                membercount: ((_b = message.conversation) === null || _b === void 0 ? void 0 : _b.membercount) || 0,\n                                ismuted: ((_c = message.conversation) === null || _c === void 0 ? void 0 : _c.ismuted) || false,\n                                isfavourite: ((_d = message.conversation) === null || _d === void 0 ? void 0 : _d.isfavourite) || false,\n                                isread: ((_e = message.conversation) === null || _e === void 0 ? void 0 : _e.isread) || false,\n                                members: ((_f = message.conversation) === null || _f === void 0 ? void 0 : _f.members) || [],\n                                messages: ((_g = message.conversation) === null || _g === void 0 ? void 0 : _g.messages) || [],\n                                candeletemessagesforallusers: ((_h = message.conversation) === null || _h === void 0 ? void 0 : _h.candeletemessagesforallusers) || false,\n                                userid: 0,\n                                name: (_j = message.conversation) === null || _j === void 0 ? void 0 : _j.name,\n                                imageurl: ((_k = message.conversation) === null || _k === void 0 ? void 0 : _k.imageurl) || '',\n                            };\n                            if (this.getConversationOption(conversation) == option) {\n                                // Message belongs to current option, add the conversation.\n                                this.addLastOfflineMessage(conversation, message);\n                                this.addOfflineConversation(conversation);\n                            }\n                        }\n                    }\n                    else if (option.type == services_messages[\"b\" /* AddonMessagesProvider */].MESSAGE_CONVERSATION_TYPE_INDIVIDUAL) {\n                        // It's a new conversation. Check if we already created it (there is more than one message for the same user).\n                        const conversation = this.findConversation(undefined, message.touserid, option);\n                        message.text = message.smallmessage;\n                        if (conversation) {\n                            // Check if it's the last message. Offline messages are considered more recent than sent messages.\n                            if ((conversation.lastmessagedate || 0) <= message.timecreated / 1000) {\n                                this.addLastOfflineMessage(conversation, message);\n                            }\n                        }\n                        else {\n                            // Get the user data and create a new conversation if it belongs to the current option.\n                            promises.push(services_user[\"a\" /* CoreUser */].getProfile(message.touserid, undefined, true).catch(() => {\n                                // User not found.\n                            }).then((user) => {\n                                const conversation = {\n                                    id: 0,\n                                    type: services_messages[\"b\" /* AddonMessagesProvider */].MESSAGE_CONVERSATION_TYPE_INDIVIDUAL,\n                                    membercount: 0,\n                                    ismuted: false,\n                                    isfavourite: false,\n                                    isread: false,\n                                    members: [],\n                                    messages: [],\n                                    candeletemessagesforallusers: false,\n                                    userid: message.touserid,\n                                    name: user ? user.fullname : String(message.touserid),\n                                    imageurl: user ? user.profileimageurl : '',\n                                };\n                                this.addLastOfflineMessage(conversation, message);\n                                this.addOfflineConversation(conversation);\n                                return;\n                            }));\n                        }\n                    }\n                });\n                yield Promise.all(promises);\n            });\n        }\n        /**\n         * Add an offline conversation into the right list of conversations.\n         *\n         * @param conversation Offline conversation to add.\n         */\n        addOfflineConversation(conversation) {\n            const option = this.getConversationOption(conversation);\n            option.conversations.unshift(conversation);\n        }\n        /**\n         * Add a last offline message into a conversation.\n         *\n         * @param conversation Conversation where to put the last message.\n         * @param message Offline message to add.\n         */\n        addLastOfflineMessage(conversation, message) {\n            conversation.lastmessage = message.text;\n            conversation.lastmessagedate = message.timecreated / 1000;\n            conversation.lastmessagepending = true;\n            conversation.sentfromcurrentuser = true;\n        }\n        /**\n         * Given a conversation, return its option (favourites, group, individual).\n         *\n         * @param conversation Conversation to check.\n         * @return Option object.\n         */\n        getConversationOption(conversation) {\n            if (conversation.isfavourite) {\n                return this.favourites;\n            }\n            if (conversation.type == services_messages[\"b\" /* AddonMessagesProvider */].MESSAGE_CONVERSATION_TYPE_GROUP) {\n                return this.group;\n            }\n            return this.individual;\n        }\n        /**\n         * Refresh the data.\n         *\n         * @param refresher Refresher.\n         * @param refreshUnreadCounts Whether to refresh unread counts.\n         * @return Promise resolved when done.\n         */\n        refreshData(refresher, refreshUnreadCounts = true) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                // Don't invalidate conversations and so, they always try to get latest data.\n                try {\n                    yield services_messages[\"a\" /* AddonMessages */].invalidateContactRequestsCountCache(this.siteId);\n                }\n                finally {\n                    try {\n                        yield this.fetchData(refreshUnreadCounts);\n                    }\n                    finally {\n                        if (refresher) {\n                            refresher === null || refresher === void 0 ? void 0 : refresher.complete();\n                        }\n                    }\n                }\n            });\n        }\n        /**\n         * Toogle the visibility of an option (expand/collapse).\n         *\n         * @param option The option to expand/collapse.\n         */\n        toggle(option) {\n            if (option.expanded) {\n                // Already expanded, close it.\n                option.expanded = false;\n                this.loadCurrentListElement();\n            }\n            else {\n                // Pass getCounts=true to update the counts everytime the user expands an option.\n                this.expandOption(option, true).catch((error) => {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(error, 'addon.messages.errorwhileretrievingdiscussions', true);\n                });\n            }\n        }\n        /**\n         * Expand a certain option.\n         *\n         * @param option The option to expand.\n         * @param getCounts Whether to get counts data.\n         * @return Promise resolved when done.\n         */\n        expandOption(option, getCounts = false) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                // Collapse all and expand the right one.\n                this.favourites.expanded = false;\n                this.group.expanded = false;\n                this.individual.expanded = false;\n                option.expanded = true;\n                option.loading = true;\n                try {\n                    yield this.fetchDataForOption(option, false, getCounts);\n                    this.loadCurrentListElement();\n                }\n                catch (error) {\n                    option.expanded = false;\n                    throw error;\n                }\n                finally {\n                    option.loading = false;\n                }\n            });\n        }\n        /**\n         * Load the current list element based on the expanded list.\n         */\n        loadCurrentListElement() {\n            if (this.favourites.expanded) {\n                this.currentListEl = this.favListEl && this.favListEl.nativeElement;\n            }\n            else if (this.group.expanded) {\n                this.currentListEl = this.groupListEl && this.groupListEl.nativeElement;\n            }\n            else if (this.individual.expanded) {\n                this.currentListEl = this.indListEl && this.indListEl.nativeElement;\n            }\n            else {\n                this.currentListEl = undefined;\n            }\n        }\n        /**\n         * Navigate to the search page.\n         */\n        gotoSearch() {\n            services_navigator[\"a\" /* CoreNavigator */].navigateToSitePath('search');\n        }\n        /**\n         * Page destroyed.\n         */\n        ngOnDestroy() {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            (_a = this.newMessagesObserver) === null || _a === void 0 ? void 0 : _a.off();\n            (_b = this.appResumeSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n            (_c = this.pushObserver) === null || _c === void 0 ? void 0 : _c.unsubscribe();\n            (_d = this.readChangedObserver) === null || _d === void 0 ? void 0 : _d.off();\n            (_e = this.cronObserver) === null || _e === void 0 ? void 0 : _e.off();\n            (_f = this.openConversationObserver) === null || _f === void 0 ? void 0 : _f.off();\n            (_g = this.updateConversationListObserver) === null || _g === void 0 ? void 0 : _g.off();\n            (_h = this.contactRequestsCountObserver) === null || _h === void 0 ? void 0 : _h.off();\n            (_j = this.memberInfoObserver) === null || _j === void 0 ? void 0 : _j.off();\n        }\n    }\n    AddonMessagesGroupConversationsPage.ɵfac = function AddonMessagesGroupConversationsPage_Factory(t) { return new (t || AddonMessagesGroupConversationsPage)(core[\"yc\" /* ɵɵdirectiveInject */](router[\"a\" /* ActivatedRoute */])); };\n    AddonMessagesGroupConversationsPage.ɵcmp = core[\"sc\" /* ɵɵdefineComponent */]({ type: AddonMessagesGroupConversationsPage, selectors: [[\"page-addon-messages-group-conversations\"]], viewQuery: function AddonMessagesGroupConversationsPage_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"ud\" /* ɵɵviewQuery */](ionic_angular[\"v\" /* IonContent */], true);\n                core[\"ud\" /* ɵɵviewQuery */](_c0, true);\n                core[\"ud\" /* ɵɵviewQuery */](_c1, true);\n                core[\"ud\" /* ɵɵviewQuery */](_c2, true);\n            }\n            if (rf & 2) {\n                var _t;\n                core[\"dd\" /* ɵɵqueryRefresh */](_t = core[\"Nc\" /* ɵɵloadQuery */]()) && (ctx.content = _t.first);\n                core[\"dd\" /* ɵɵqueryRefresh */](_t = core[\"Nc\" /* ɵɵloadQuery */]()) && (ctx.favListEl = _t.first);\n                core[\"dd\" /* ɵɵqueryRefresh */](_t = core[\"Nc\" /* ɵɵloadQuery */]()) && (ctx.groupListEl = _t.first);\n                core[\"dd\" /* ɵɵqueryRefresh */](_t = core[\"Nc\" /* ɵɵloadQuery */]()) && (ctx.indListEl = _t.first);\n            }\n        }, decls: 79, vars: 86, consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"name\", \"fas-search\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"click\"], [\"name\", \"fas-cog\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\", \"message\"], [\"detail\", \"true\", \"button\", \"\", 1, \"ion-text-wrap\", \"addon-message-discussion\", 3, \"click\"], [\"name\", \"fas-address-book\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"slot\", \"end\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"class\", \"sr-only\", 4, \"ngIf\"], [\"button\", \"\", \"sticky\", \"true\", \"aria-controls\", \"addon-messages-groupconversations-favourite\", \"role\", \"heading\", \"detail\", \"false\", 1, \"ion-text-wrap\", \"divider\", 3, \"click\"], [\"name\", \"fas-chevron-right\", \"flip-rtl\", \"\", \"slot\", \"start\", \"aria-hidden\", \"true\", 1, \"expandable-status-icon\"], [\"id\", \"addon-messages-groupconversations-favourite\", 3, \"hidden\"], [\"favlist\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"enabled\", \"error\", \"action\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [\"class\", \"ion-text-center\", 4, \"ngIf\"], [\"button\", \"\", \"sticky\", \"true\", \"aria-controls\", \"addon-messages-groupconversations-group\", \"role\", \"heading\", \"detail\", \"false\", 1, \"divider\", \"ion-text-wrap\", 3, \"click\"], [\"id\", \"addon-messages-groupconversations-group\", 3, \"hidden\"], [\"grouplist\", \"\"], [\"button\", \"\", \"sticky\", \"true\", \"aria-controls\", \"addon-messages-groupconversations-individual\", \"role\", \"heading\", \"detail\", \"false\", 1, \"divider\", \"ion-text-wrap\", 3, \"click\"], [\"id\", \"addon-messages-groupconversations-individual\", 3, \"hidden\"], [\"indlist\", \"\"], [\"conversationsTemplate\", \"\"], [\"slot\", \"end\", \"aria-hidden\", \"true\"], [1, \"sr-only\"], [1, \"ion-text-wrap\"], [1, \"ion-text-center\"], [\"class\", \"ion-text-wrap addon-message-discussion\", \"button\", \"\", \"detail\", \"false\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", \"detail\", \"false\", 1, \"ion-text-wrap\", \"addon-message-discussion\", 3, \"id\", \"click\"], [\"slot\", \"start\", 4, \"ngIf\"], [\"core-user-avatar\", \"\", \"slot\", \"start\", 3, \"user\", \"linkProfile\", \"checkOnline\", 4, \"ngIf\"], [1, \"flex-row\", \"ion-justify-content-between\"], [1, \"item-heading\"], [\"contextLevel\", \"system\", 3, \"text\", \"contextInstanceId\"], [\"name\", \"fas-user-slash\", 3, \"title\", 4, \"ngIf\"], [\"name\", \"fas-volume-mute\", 3, \"title\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"addon-message-last-message\"], [\"class\", \"addon-message-last-message-user\", 4, \"ngIf\"], [\"clean\", \"true\", \"singleLine\", \"true\", \"contextLevel\", \"system\", 1, \"addon-message-last-message-text\", 3, \"text\", \"contextInstanceId\"], [\"core-external-content\", \"\", \"onError\", \"this.src='assets/img/group-avatar.svg'\", 3, \"src\", \"alt\"], [\"core-user-avatar\", \"\", \"slot\", \"start\", 3, \"user\", \"linkProfile\", \"checkOnline\"], [\"name\", \"fas-user-slash\", 3, \"title\"], [\"name\", \"fas-volume-mute\", 3, \"title\"], [\"class\", \"addon-message-last-message-date\", 4, \"ngIf\"], [\"aria-label\", \"true\", 4, \"ngIf\"], [1, \"addon-message-last-message-date\"], [\"aria-label\", \"true\"], [1, \"addon-message-last-message-user\"]], template: function AddonMessagesGroupConversationsPage_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ec\" /* ɵɵelementStart */](0, \"ion-header\");\n                core[\"Ec\" /* ɵɵelementStart */](1, \"ion-toolbar\");\n                core[\"Ec\" /* ɵɵelementStart */](2, \"ion-buttons\", 0);\n                core[\"zc\" /* ɵɵelement */](3, \"ion-back-button\", 1);\n                core[\"Pc\" /* ɵɵpipe */](4, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](5, \"ion-title\");\n                core[\"Ec\" /* ɵɵelementStart */](6, \"h1\");\n                core[\"pd\" /* ɵɵtext */](7);\n                core[\"Pc\" /* ɵɵpipe */](8, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](9, \"ion-buttons\", 2);\n                core[\"Ec\" /* ɵɵelementStart */](10, \"ion-button\", 3);\n                core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonMessagesGroupConversationsPage_Template_ion_button_click_10_listener() { return ctx.gotoSearch(); });\n                core[\"Pc\" /* ɵɵpipe */](11, \"translate\");\n                core[\"zc\" /* ɵɵelement */](12, \"ion-icon\", 4);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](13, \"ion-button\", 5);\n                core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonMessagesGroupConversationsPage_Template_ion_button_click_13_listener() { return ctx.gotoSettings(); });\n                core[\"Pc\" /* ɵɵpipe */](14, \"translate\");\n                core[\"zc\" /* ɵɵelement */](15, \"ion-icon\", 6);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"zc\" /* ɵɵelement */](16, \"core-user-menu-button\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](17, \"ion-content\");\n                core[\"Ec\" /* ɵɵelementStart */](18, \"core-split-view\");\n                core[\"Ec\" /* ɵɵelementStart */](19, \"ion-refresher\", 7);\n                core[\"Mc\" /* ɵɵlistener */](\"ionRefresh\", function AddonMessagesGroupConversationsPage_Template_ion_refresher_ionRefresh_19_listener($event) { return ctx.refreshData($event.target); });\n                core[\"zc\" /* ɵɵelement */](20, \"ion-refresher-content\", 8);\n                core[\"Pc\" /* ɵɵpipe */](21, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](22, \"core-loading\", 9);\n                core[\"Ec\" /* ɵɵelementStart */](23, \"ion-list\");\n                core[\"Ec\" /* ɵɵelementStart */](24, \"ion-item\", 10);\n                core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonMessagesGroupConversationsPage_Template_ion_item_click_24_listener() { return ctx.gotoContacts(); });\n                core[\"zc\" /* ɵɵelement */](25, \"ion-icon\", 11);\n                core[\"Ec\" /* ɵɵelementStart */](26, \"ion-label\");\n                core[\"Ec\" /* ɵɵelementStart */](27, \"h2\");\n                core[\"pd\" /* ɵɵtext */](28);\n                core[\"Pc\" /* ɵɵpipe */](29, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](30, AddonMessagesGroupConversationsPage_ion_badge_30_Template, 2, 1, \"ion-badge\", 12);\n                core[\"nd\" /* ɵɵtemplate */](31, AddonMessagesGroupConversationsPage_span_31_Template, 3, 6, \"span\", 13);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](32, \"ion-item\", 14);\n                core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonMessagesGroupConversationsPage_Template_ion_item_click_32_listener() { return ctx.toggle(ctx.favourites); });\n                core[\"Pc\" /* ɵɵpipe */](33, \"translate\");\n                core[\"zc\" /* ɵɵelement */](34, \"ion-icon\", 15);\n                core[\"Ec\" /* ɵɵelementStart */](35, \"ion-label\");\n                core[\"Ec\" /* ɵɵelementStart */](36, \"h2\");\n                core[\"pd\" /* ɵɵtext */](37);\n                core[\"Pc\" /* ɵɵpipe */](38, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](39, AddonMessagesGroupConversationsPage_ion_badge_39_Template, 2, 1, \"ion-badge\", 12);\n                core[\"nd\" /* ɵɵtemplate */](40, AddonMessagesGroupConversationsPage_span_40_Template, 3, 6, \"span\", 13);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](41, \"div\", 16, 17);\n                core[\"nd\" /* ɵɵtemplate */](43, AddonMessagesGroupConversationsPage_ng_container_43_Template, 1, 0, \"ng-container\", 18);\n                core[\"Ec\" /* ɵɵelementStart */](44, \"core-infinite-loading\", 19);\n                core[\"Mc\" /* ɵɵlistener */](\"action\", function AddonMessagesGroupConversationsPage_Template_core_infinite_loading_action_44_listener($event) { return ctx.loadMoreConversations(ctx.favourites, $event); });\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](45, AddonMessagesGroupConversationsPage_ion_item_45_Template, 5, 3, \"ion-item\", 20);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](46, AddonMessagesGroupConversationsPage_ion_item_46_Template, 4, 3, \"ion-item\", 21);\n                core[\"Ec\" /* ɵɵelementStart */](47, \"ion-item\", 22);\n                core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonMessagesGroupConversationsPage_Template_ion_item_click_47_listener() { return ctx.toggle(ctx.group); });\n                core[\"Pc\" /* ɵɵpipe */](48, \"translate\");\n                core[\"zc\" /* ɵɵelement */](49, \"ion-icon\", 15);\n                core[\"Ec\" /* ɵɵelementStart */](50, \"ion-label\");\n                core[\"Ec\" /* ɵɵelementStart */](51, \"h2\");\n                core[\"pd\" /* ɵɵtext */](52);\n                core[\"Pc\" /* ɵɵpipe */](53, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](54, AddonMessagesGroupConversationsPage_ion_badge_54_Template, 2, 1, \"ion-badge\", 12);\n                core[\"nd\" /* ɵɵtemplate */](55, AddonMessagesGroupConversationsPage_span_55_Template, 3, 6, \"span\", 13);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](56, \"div\", 23, 24);\n                core[\"nd\" /* ɵɵtemplate */](58, AddonMessagesGroupConversationsPage_ng_container_58_Template, 1, 0, \"ng-container\", 18);\n                core[\"Ec\" /* ɵɵelementStart */](59, \"core-infinite-loading\", 19);\n                core[\"Mc\" /* ɵɵlistener */](\"action\", function AddonMessagesGroupConversationsPage_Template_core_infinite_loading_action_59_listener($event) { return ctx.loadMoreConversations(ctx.group, $event); });\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](60, AddonMessagesGroupConversationsPage_ion_item_60_Template, 5, 3, \"ion-item\", 20);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](61, AddonMessagesGroupConversationsPage_ion_item_61_Template, 4, 3, \"ion-item\", 21);\n                core[\"Ec\" /* ɵɵelementStart */](62, \"ion-item\", 25);\n                core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonMessagesGroupConversationsPage_Template_ion_item_click_62_listener() { return ctx.toggle(ctx.individual); });\n                core[\"Pc\" /* ɵɵpipe */](63, \"translate\");\n                core[\"zc\" /* ɵɵelement */](64, \"ion-icon\", 15);\n                core[\"Ec\" /* ɵɵelementStart */](65, \"ion-label\");\n                core[\"Ec\" /* ɵɵelementStart */](66, \"h2\");\n                core[\"pd\" /* ɵɵtext */](67);\n                core[\"Pc\" /* ɵɵpipe */](68, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](69, AddonMessagesGroupConversationsPage_ion_badge_69_Template, 2, 1, \"ion-badge\", 12);\n                core[\"nd\" /* ɵɵtemplate */](70, AddonMessagesGroupConversationsPage_span_70_Template, 3, 6, \"span\", 13);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](71, \"div\", 26, 27);\n                core[\"nd\" /* ɵɵtemplate */](73, AddonMessagesGroupConversationsPage_ng_container_73_Template, 1, 0, \"ng-container\", 18);\n                core[\"Ec\" /* ɵɵelementStart */](74, \"core-infinite-loading\", 19);\n                core[\"Mc\" /* ɵɵlistener */](\"action\", function AddonMessagesGroupConversationsPage_Template_core_infinite_loading_action_74_listener($event) { return ctx.loadMoreConversations(ctx.individual, $event); });\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](75, AddonMessagesGroupConversationsPage_ion_item_75_Template, 5, 3, \"ion-item\", 20);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](76, AddonMessagesGroupConversationsPage_ion_item_76_Template, 4, 3, \"ion-item\", 21);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"nd\" /* ɵɵtemplate */](77, AddonMessagesGroupConversationsPage_ng_template_77_Template, 1, 1, \"ng-template\", null, 28, core[\"od\" /* ɵɵtemplateRefExtractor */]);\n            }\n            if (rf & 2) {\n                const _r20 = core[\"ed\" /* ɵɵreference */](78);\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"Vc\" /* ɵɵproperty */](\"text\", core[\"Qc\" /* ɵɵpipeBind1 */](4, 56, \"core.back\"));\n                core[\"lc\" /* ɵɵadvance */](4);\n                core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](8, 58, \"addon.messages.messages\"));\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](11, 60, \"addon.messages.searchcombined\"));\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](14, 62, \"addon.messages.messagepreferences\"));\n                core[\"lc\" /* ɵɵadvance */](6);\n                core[\"Vc\" /* ɵɵproperty */](\"disabled\", !ctx.loaded || !ctx.currentListEl);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Wc\" /* ɵɵpropertyInterpolate */](\"pullingText\", core[\"Qc\" /* ɵɵpipeBind1 */](21, 64, \"core.pulltorefresh\"));\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"hideUntil\", ctx.loaded)(\"message\", ctx.loadingMessage);\n                core[\"lc\" /* ɵɵadvance */](6);\n                core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](29, 66, \"addon.messages.contacts\"));\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.contactRequestsCount > 0);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.contactRequestsCount > 0);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](33, 68, ctx.favourites.expanded ? \"core.collapse\" : \"core.expand\"))(\"aria-expanded\", ctx.favourites.expanded);\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"qc\" /* ɵɵclassProp */](\"expandable-status-icon-expanded\", ctx.favourites.expanded);\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"sd\" /* ɵɵtextInterpolate2 */](\"\", core[\"Qc\" /* ɵɵpipeBind1 */](38, 70, \"core.favourites\"), \" (\", ctx.favourites.count, \")\");\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.favourites.unread);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.favourites.unread);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"hidden\", !ctx.favourites.conversations || !ctx.favourites.expanded || ctx.favourites.loading);\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngTemplateOutlet\", _r20)(\"ngTemplateOutletContext\", core[\"ad\" /* ɵɵpureFunction1 */](80, _c4, ctx.favourites.conversations));\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"enabled\", ctx.favourites.canLoadMore)(\"error\", ctx.favourites.loadMoreError);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.favourites.conversations && ctx.favourites.conversations.length == 0);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.favourites.loading);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](48, 72, ctx.group.expanded ? \"core.collapse\" : \"core.expand\"))(\"aria-expanded\", ctx.group.expanded);\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"qc\" /* ɵɵclassProp */](\"expandable-status-icon-expanded\", ctx.group.expanded);\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"sd\" /* ɵɵtextInterpolate2 */](\"\", core[\"Qc\" /* ɵɵpipeBind1 */](53, 74, \"addon.messages.groupconversations\"), \" (\", ctx.group.count, \")\");\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.group.unread);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.group.unread);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"hidden\", !ctx.group.conversations || !ctx.group.expanded || ctx.group.loading);\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngTemplateOutlet\", _r20)(\"ngTemplateOutletContext\", core[\"ad\" /* ɵɵpureFunction1 */](82, _c4, ctx.group.conversations));\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"enabled\", ctx.group.canLoadMore)(\"error\", ctx.group.loadMoreError);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.group.conversations && ctx.group.conversations.length == 0);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.group.loading);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"mc\" /* ɵɵattribute */](\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](63, 76, ctx.individual.expanded ? \"core.collapse\" : \"core.expand\"))(\"aria-expanded\", ctx.individual.expanded);\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"qc\" /* ɵɵclassProp */](\"expandable-status-icon-expanded\", ctx.individual.expanded);\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"sd\" /* ɵɵtextInterpolate2 */](\"\", core[\"Qc\" /* ɵɵpipeBind1 */](68, 78, \"addon.messages.individualconversations\"), \" (\", ctx.individual.count, \")\");\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.individual.unread);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.individual.unread);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"hidden\", !ctx.individual.conversations || !ctx.individual.expanded || ctx.individual.loading);\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngTemplateOutlet\", _r20)(\"ngTemplateOutletContext\", core[\"ad\" /* ɵɵpureFunction1 */](84, _c4, ctx.individual.conversations));\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"enabled\", ctx.individual.canLoadMore)(\"error\", ctx.individual.loadMoreError);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.individual.conversations && ctx.individual.conversations.length == 0);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.individual.loading);\n            }\n        }, directives: [ionic_angular[\"C\" /* IonHeader */], ionic_angular[\"Ab\" /* IonToolbar */], ionic_angular[\"m\" /* IonButtons */], ionic_angular[\"h\" /* IonBackButton */], ionic_angular[\"i\" /* IonBackButtonDelegate */], ionic_angular[\"yb\" /* IonTitle */], update_non_reactive_attributes[\"a\" /* CoreUpdateNonReactiveAttributesDirective */], ionic_angular[\"l\" /* IonButton */], ionic_angular[\"D\" /* IonIcon */], fa_icon[\"a\" /* CoreFaIconDirective */], user_menu_button[\"a\" /* CoreMainMenuUserButtonComponent */], content[\"a\" /* CoreContentDirective */], ionic_angular[\"v\" /* IonContent */], split_view[\"a\" /* CoreSplitViewComponent */], ionic_angular[\"bb\" /* IonRefresher */], ionic_angular[\"cb\" /* IonRefresherContent */], loading[\"a\" /* CoreLoadingComponent */], ionic_angular[\"P\" /* IonList */], ionic_angular[\"I\" /* IonItem */], ionic_angular[\"O\" /* IonLabel */], common[\"t\" /* NgIf */], common[\"A\" /* NgTemplateOutlet */], infinite_loading[\"a\" /* CoreInfiniteLoadingComponent */], ionic_angular[\"k\" /* IonBadge */], ionic_angular[\"qb\" /* IonSpinner */], common[\"s\" /* NgForOf */], format_text[\"a\" /* CoreFormatTextDirective */], ionic_angular[\"g\" /* IonAvatar */], external_content[\"a\" /* CoreExternalContentDirective */], user_avatar[\"a\" /* CoreUserAvatarComponent */], ionic_angular[\"W\" /* IonNote */]], pipes: [ngx_translate_core[\"d\" /* TranslatePipe */], date_day_or_time[\"a\" /* CoreDateDayOrTimePipe */]], styles: [\"[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]{margin-right:0;margin-left:0}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   core-format-text[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   core-format-text[_ngcontent-%COMP%]{font-weight:700}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{margin-left:2px}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{margin-left:unset;-webkit-margin-start:2px;margin-inline-start:2px}}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-self:flex-start;margin-left:2px}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]{margin-left:unset;-webkit-margin-start:2px;margin-inline-start:2px}}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{margin-top:3px;align-self:flex-end}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   .addon-message-last-message-date[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   .addon-message-last-message-date[_ngcontent-%COMP%]{white-space:nowrap;font-size:11px}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message[_ngcontent-%COMP%]{display:flex;justify-content:flex-start}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%]{white-space:nowrap;color:var(--ion-text-color);margin-right:2px}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%]{margin-right:unset;-webkit-margin-end:2px;margin-inline-end:2px}}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-text[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-text[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;flex-shrink:1}[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]{margin-top:10px}[_nghost-%COMP%]   ion-item-divider[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%]{margin-left:16px;margin-right:16px}\"] });\n    return AddonMessagesGroupConversationsPage;\n})();\n\n// EXTERNAL MODULE: ./src/addons/messages/services/handlers/mainmenu.ts\nvar mainmenu = __webpack_require__(\"OQOI\");\n\n// EXTERNAL MODULE: ./src/core/features/mainmenu/components/components.module.ts\nvar components_module = __webpack_require__(\"dQ3M\");\n\n// CONCATENATED MODULE: ./src/addons/messages/pages/group-conversations/group-conversations.module.ts\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\nconst mobileRoutes = [\n    {\n        path: '',\n        data: {\n            mainMenuTabRoot: mainmenu[\"b\" /* AddonMessagesMainMenuHandlerService */].PAGE_NAME,\n        },\n        component: group_conversations_page_AddonMessagesGroupConversationsPage,\n    },\n    messages_lazy_module[\"AddonMessagesDiscussionRoute\"],\n];\nconst tabletRoutes = [\n    {\n        path: '',\n        data: {\n            mainMenuTabRoot: mainmenu[\"b\" /* AddonMessagesMainMenuHandlerService */].PAGE_NAME,\n        },\n        component: group_conversations_page_AddonMessagesGroupConversationsPage,\n        children: [\n            messages_lazy_module[\"AddonMessagesDiscussionRoute\"],\n        ],\n    },\n];\nconst routes = [\n    ...Object(app_routing_module[\"c\" /* conditionalRoutes */])(mobileRoutes, () => screen[\"a\" /* CoreScreen */].isMobile),\n    ...Object(app_routing_module[\"c\" /* conditionalRoutes */])(tabletRoutes, () => screen[\"a\" /* CoreScreen */].isTablet),\n];\nlet group_conversations_module_AddonMessagesGroupConversationsPageModule = /*@__PURE__*/ (() => {\n    class AddonMessagesGroupConversationsPageModule {\n    }\n    AddonMessagesGroupConversationsPageModule.ɵmod = core[\"wc\" /* ɵɵdefineNgModule */]({ type: AddonMessagesGroupConversationsPageModule });\n    AddonMessagesGroupConversationsPageModule.ɵinj = core[\"vc\" /* ɵɵdefineInjector */]({ factory: function AddonMessagesGroupConversationsPageModule_Factory(t) { return new (t || AddonMessagesGroupConversationsPageModule)(); }, imports: [[\n                router[\"m\" /* RouterModule */].forChild(routes),\n                shared_module[\"a\" /* CoreSharedModule */],\n                components_module[\"a\" /* CoreMainMenuComponentsModule */],\n            ], router[\"m\" /* RouterModule */]] });\n    return AddonMessagesGroupConversationsPageModule;\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"kd\" /* ɵɵsetNgModuleScope */](group_conversations_module_AddonMessagesGroupConversationsPageModule, { declarations: [group_conversations_page_AddonMessagesGroupConversationsPage], imports: [router[\"m\" /* RouterModule */], shared_module[\"a\" /* CoreSharedModule */],\n            components_module[\"a\" /* CoreMainMenuComponentsModule */]], exports: [router[\"m\" /* RouterModule */]] });\n})();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}