{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{Tsnu:function(e,s,t){\"use strict\";t.r(s),t.d(s,\"startFocusVisible\",(function(){return startFocusVisible}));const o=\"ion-focused\",n=[\"Tab\",\"ArrowDown\",\"Space\",\"Escape\",\" \",\"Shift\",\"Enter\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\"],startFocusVisible=()=>{let e=[],s=!0;const t=document,setFocus=s=>{e.forEach((e=>e.classList.remove(o))),s.forEach((e=>e.classList.add(o))),e=s},pointerDown=()=>{s=!1,setFocus([])};t.addEventListener(\"keydown\",(e=>{s=n.includes(e.key),s||setFocus([])})),t.addEventListener(\"focusin\",(e=>{if(s&&e.composedPath){const s=e.composedPath().filter((e=>!!e.classList&&e.classList.contains(\"ion-focusable\")));setFocus(s)}})),t.addEventListener(\"focusout\",(()=>{t.activeElement===t.body&&setFocus([])})),t.addEventListener(\"touchstart\",pointerDown),t.addEventListener(\"mousedown\",pointerDown)}}}]);","name":"133.7aa098731fea03d62986.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[133],{\n\n/***/ \"Tsnu\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startFocusVisible\", function() { return startFocusVisible; });\nconst ION_FOCUSED = 'ion-focused';\nconst ION_FOCUSABLE = 'ion-focusable';\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\nconst startFocusVisible = () => {\n  let currentFocus = [];\n  let keyboardMode = true;\n  const doc = document;\n  const setFocus = (elements) => {\n    currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\n    elements.forEach(el => el.classList.add(ION_FOCUSED));\n    currentFocus = elements;\n  };\n  const pointerDown = () => {\n    keyboardMode = false;\n    setFocus([]);\n  };\n  doc.addEventListener('keydown', ev => {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('focusin', ev => {\n    if (keyboardMode && ev.composedPath) {\n      const toFocus = ev.composedPath().filter((el) => {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  });\n  doc.addEventListener('focusout', () => {\n    if (doc.activeElement === doc.body) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('touchstart', pointerDown);\n  doc.addEventListener('mousedown', pointerDown);\n};\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":null}