{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{FguK:function(e,t,i){\"use strict\";i.r(t),i.d(t,\"AddonMessageOutputAirnotifierDevicesPageModule\",(function(){return _}));var n=i(\"tyNb\"),o=i(\"L3Fv\"),s=i(\"mrSG\"),c=i(\"3LXp\"),r=i(\"Afn4\"),a=i(\"FEUt\"),d=i(\"bFG1\"),u=i(\"fXoL\"),l=i(\"TEn/\"),g=i(\"nt/U\"),p=i(\"PgjG\"),f=i(\"ofXK\"),v=i(\"3zv0\"),D=i(\"3Pt+\"),m=i(\"sYmb\");function AddonMessageOutputAirnotifierDevicesPage_ion_item_15_span_4_Template(e,t){1&e&&(u.Ec(0,\"span\"),u.pd(1),u.Pc(2,\"translate\"),u.Dc()),2&e&&(u.lc(1),u.rd(\"(\",u.Qc(2,1,\"core.currentdevice\"),\")\"))}function AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template(e,t){if(1&e){const e=u.Fc();u.Ec(0,\"ion-item\",6),u.Ec(1,\"ion-label\"),u.Ec(2,\"p\",7),u.pd(3),u.nd(4,AddonMessageOutputAirnotifierDevicesPage_ion_item_15_span_4_Template,3,3,\"span\",8),u.Dc(),u.Ec(5,\"p\"),u.pd(6),u.Dc(),u.Dc(),u.Ec(7,\"core-button-with-spinner\",9),u.Ec(8,\"ion-toggle\",10),u.Mc(\"ngModelChange\",(function AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template_ion_toggle_ngModelChange_8_listener(i){u.fd(e);return t.$implicit.enable=i}))(\"ngModelChange\",(function AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template_ion_toggle_ngModelChange_8_listener(){u.fd(e);const i=t.$implicit;return u.Oc().enableDevice(i,i.enable)})),u.Dc(),u.Dc(),u.Dc()}if(2&e){const e=t.$implicit;u.qc(\"item-current\",e.current),u.lc(1),u.qc(\"core-bold\",e.current),u.lc(2),u.sd(\" \",e.name,\" \",e.model,\" \"),u.lc(1),u.Vc(\"ngIf\",e.current),u.lc(2),u.sd(\"\",e.platform,\" \",e.version,\"\"),u.lc(1),u.Vc(\"loading\",e.updating),u.lc(1),u.Vc(\"ngModel\",e.enable)}}let h=(()=>{class AddonMessageOutputAirnotifierDevicesPage{constructor(){this.devices=[],this.devicesLoaded=!1}ngOnInit(){this.fetchDevices()}fetchDevices(){return Object(s.a)(this,void 0,void 0,(function*(){try{const e=yield a.a.getUserDevices();this.devices=this.formatDevices(e)}catch(e){c.a.showErrorModal(e)}finally{this.devicesLoaded=!0}}))}formatDevices(e){const t=e,i=r.a.getPushId();return t.forEach((e=>{e.enable=!!e.enable,e.current=!(!i||i!=e.pushid)})),t.sort(((e,t)=>{const i=e.name.toLowerCase(),n=t.name.toLowerCase();return i.localeCompare(n)}))}updateDevicesAfterDelay(){this.updateTimeout&&clearTimeout(this.updateTimeout),this.updateTimeout=window.setTimeout((()=>{this.updateTimeout=void 0,this.updateDevices()}),5e3)}updateDevices(){return Object(s.a)(this,void 0,void 0,(function*(){yield d.a.ignoreErrors(a.a.invalidateUserDevices()),yield a.a.getUserDevices()}))}refreshDevices(e){return Object(s.a)(this,void 0,void 0,(function*(){try{yield d.a.ignoreErrors(a.a.invalidateUserDevices()),yield this.fetchDevices()}finally{null==e?void 0:e.complete()}}))}enableDevice(e,t){return Object(s.a)(this,void 0,void 0,(function*(){e.updating=!0;try{yield a.a.enableDevice(e.id,t),this.updateDevicesAfterDelay()}catch(t){c.a.showErrorModal(t),e.enable=!e.enable}finally{e.updating=!1}}))}ngOnDestroy(){this.updateTimeout&&(clearTimeout(this.updateTimeout),this.updateDevices())}}return AddonMessageOutputAirnotifierDevicesPage.ɵfac=function AddonMessageOutputAirnotifierDevicesPage_Factory(e){return new(e||AddonMessageOutputAirnotifierDevicesPage)},AddonMessageOutputAirnotifierDevicesPage.ɵcmp=u.sc({type:AddonMessageOutputAirnotifierDevicesPage,selectors:[[\"page-addon-message-output-airnotifier-devices\"]],decls:16,vars:12,consts:[[\"slot\",\"start\"],[3,\"text\"],[\"slot\",\"fixed\",3,\"disabled\",\"ionRefresh\"],[3,\"pullingText\"],[3,\"hideUntil\"],[\"class\",\"ion-text-wrap\",3,\"item-current\",4,\"ngFor\",\"ngForOf\"],[1,\"ion-text-wrap\"],[1,\"item-heading\"],[4,\"ngIf\"],[\"slot\",\"end\",3,\"loading\"],[3,\"ngModel\",\"ngModelChange\"]],template:function AddonMessageOutputAirnotifierDevicesPage_Template(e,t){1&e&&(u.Ec(0,\"ion-header\"),u.Ec(1,\"ion-toolbar\"),u.Ec(2,\"ion-buttons\",0),u.zc(3,\"ion-back-button\",1),u.Pc(4,\"translate\"),u.Dc(),u.Ec(5,\"ion-title\"),u.Ec(6,\"h1\"),u.pd(7),u.Pc(8,\"translate\"),u.Dc(),u.Dc(),u.Dc(),u.Dc(),u.Ec(9,\"ion-content\"),u.Ec(10,\"ion-refresher\",2),u.Mc(\"ionRefresh\",(function AddonMessageOutputAirnotifierDevicesPage_Template_ion_refresher_ionRefresh_10_listener(e){return t.refreshDevices(e.target)})),u.zc(11,\"ion-refresher-content\",3),u.Pc(12,\"translate\"),u.Dc(),u.Ec(13,\"core-loading\",4),u.Ec(14,\"ion-list\"),u.nd(15,AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template,9,11,\"ion-item\",5),u.Dc(),u.Dc(),u.Dc()),2&e&&(u.lc(3),u.Vc(\"text\",u.Qc(4,6,\"core.back\")),u.lc(4),u.qd(u.Qc(8,8,\"addon.messageoutput_airnotifier.processorsettingsdesc\")),u.lc(3),u.Vc(\"disabled\",!t.devicesLoaded),u.lc(1),u.Wc(\"pullingText\",u.Qc(12,10,\"core.pulltorefresh\")),u.lc(2),u.Vc(\"hideUntil\",t.devicesLoaded),u.lc(2),u.Vc(\"ngForOf\",t.devices))},directives:[l.C,l.Ab,l.m,l.h,l.i,l.yb,g.a,l.v,l.bb,l.cb,p.a,l.P,f.s,l.I,l.O,f.t,v.a,l.zb,l.d,D.r,D.u],pipes:[m.d],encapsulation:2}),AddonMessageOutputAirnotifierDevicesPage})();const A=[{path:\"\",component:h}];let _=(()=>{class AddonMessageOutputAirnotifierDevicesPageModule{}return AddonMessageOutputAirnotifierDevicesPageModule.ɵmod=u.wc({type:AddonMessageOutputAirnotifierDevicesPageModule}),AddonMessageOutputAirnotifierDevicesPageModule.ɵinj=u.vc({factory:function AddonMessageOutputAirnotifierDevicesPageModule_Factory(e){return new(e||AddonMessageOutputAirnotifierDevicesPageModule)},imports:[[n.m.forChild(A),o.a],n.m]}),AddonMessageOutputAirnotifierDevicesPageModule})();void((\"undefined\"==typeof ngJitMode||ngJitMode)&&u.kd(_,{declarations:[h],imports:[n.m,o.a],exports:[n.m]}))}}]);","name":"43.d99c7286b9ea43dfbcc7.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[43],{\n\n/***/ \"FguK\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"AddonMessageOutputAirnotifierDevicesPageModule\", function() { return /* binding */ devices_module_AddonMessageOutputAirnotifierDevicesPageModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 10 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./src/core/shared.module.ts + 3 modules\nvar shared_module = __webpack_require__(\"L3Fv\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/dom.ts + 2 modules\nvar dom = __webpack_require__(\"3LXp\");\n\n// EXTERNAL MODULE: ./src/core/features/pushnotifications/services/pushnotifications.ts\nvar pushnotifications = __webpack_require__(\"Afn4\");\n\n// EXTERNAL MODULE: ./src/addons/messageoutput/airnotifier/services/airnotifier.ts\nvar airnotifier = __webpack_require__(\"FEUt\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/utils.ts\nvar utils = __webpack_require__(\"bFG1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js + 5 modules\nvar ionic_angular = __webpack_require__(\"TEn/\");\n\n// EXTERNAL MODULE: ./src/core/directives/content.ts\nvar content = __webpack_require__(\"nt/U\");\n\n// EXTERNAL MODULE: ./src/core/components/loading/loading.ts\nvar loading = __webpack_require__(\"PgjG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./src/core/components/button-with-spinner/button-with-spinner.ts\nvar button_with_spinner = __webpack_require__(\"3zv0\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js + 8 modules\nvar ngx_translate_core = __webpack_require__(\"sYmb\");\n\n// CONCATENATED MODULE: ./src/addons/messageoutput/airnotifier/pages/devices/devices.ts\n\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction AddonMessageOutputAirnotifierDevicesPage_ion_item_15_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"span\");\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Pc\" /* ɵɵpipe */](2, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\"(\", core[\"Qc\" /* ɵɵpipeBind1 */](2, 1, \"core.currentdevice\"), \")\");\n    }\n}\nfunction AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r4 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 6);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](2, \"p\", 7);\n        core[\"pd\" /* ɵɵtext */](3);\n        core[\"nd\" /* ɵɵtemplate */](4, AddonMessageOutputAirnotifierDevicesPage_ion_item_15_span_4_Template, 3, 3, \"span\", 8);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](5, \"p\");\n        core[\"pd\" /* ɵɵtext */](6);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](7, \"core-button-with-spinner\", 9);\n        core[\"Ec\" /* ɵɵelementStart */](8, \"ion-toggle\", 10);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template_ion_toggle_ngModelChange_8_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r4); const device_r1 = ctx.$implicit; return device_r1.enable = $event; })(\"ngModelChange\", function AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template_ion_toggle_ngModelChange_8_listener() { core[\"fd\" /* ɵɵrestoreView */](_r4); const device_r1 = ctx.$implicit; const ctx_r5 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r5.enableDevice(device_r1, device_r1.enable); });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const device_r1 = ctx.$implicit;\n        core[\"qc\" /* ɵɵclassProp */](\"item-current\", device_r1.current);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qc\" /* ɵɵclassProp */](\"core-bold\", device_r1.current);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"sd\" /* ɵɵtextInterpolate2 */](\" \", device_r1.name, \" \", device_r1.model, \" \");\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", device_r1.current);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"sd\" /* ɵɵtextInterpolate2 */](\"\", device_r1.platform, \" \", device_r1.version, \"\");\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"loading\", device_r1.updating);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", device_r1.enable);\n    }\n}\n/**\n * Page that displays the list of devices.\n */\nlet devices_AddonMessageOutputAirnotifierDevicesPage = /*@__PURE__*/ (() => {\n    class AddonMessageOutputAirnotifierDevicesPage {\n        constructor() {\n            this.devices = [];\n            this.devicesLoaded = false;\n        }\n        /**\n         * Component being initialized.\n         */\n        ngOnInit() {\n            this.fetchDevices();\n        }\n        /**\n         * Fetches the list of devices.\n         *\n         * @return Promise resolved when done.\n         */\n        fetchDevices() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    const devices = yield airnotifier[\"a\" /* AddonMessageOutputAirnotifier */].getUserDevices();\n                    this.devices = this.formatDevices(devices);\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModal(error);\n                }\n                finally {\n                    this.devicesLoaded = true;\n                }\n            });\n        }\n        /**\n         * Add some calculated data for devices.\n         *\n         * @param devices Devices to format.\n         * @return Formatted devices.\n         */\n        formatDevices(devices) {\n            const formattedDevices = devices;\n            const pushId = pushnotifications[\"a\" /* CorePushNotifications */].getPushId();\n            // Convert enabled to boolean and search current device.\n            formattedDevices.forEach((device) => {\n                device.enable = !!device.enable;\n                device.current = !!(pushId && pushId == device.pushid);\n            });\n            return formattedDevices.sort((a, b) => {\n                const compareA = a.name.toLowerCase();\n                const compareB = b.name.toLowerCase();\n                return compareA.localeCompare(compareB);\n            });\n        }\n        /**\n         * Update list of devices after a certain time. The purpose is to store the updated data, it won't be reflected in the view.\n         */\n        updateDevicesAfterDelay() {\n            // Cancel pending updates.\n            if (this.updateTimeout) {\n                clearTimeout(this.updateTimeout);\n            }\n            this.updateTimeout = window.setTimeout(() => {\n                this.updateTimeout = undefined;\n                this.updateDevices();\n            }, 5000);\n        }\n        /**\n         * Fetch devices. The purpose is to store the updated data, it won't be reflected in the view.\n         */\n        updateDevices() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                yield utils[\"a\" /* CoreUtils */].ignoreErrors(airnotifier[\"a\" /* AddonMessageOutputAirnotifier */].invalidateUserDevices());\n                yield airnotifier[\"a\" /* AddonMessageOutputAirnotifier */].getUserDevices();\n            });\n        }\n        /**\n         * Refresh the list of devices.\n         *\n         * @param refresher Refresher.\n         */\n        refreshDevices(refresher) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    yield utils[\"a\" /* CoreUtils */].ignoreErrors(airnotifier[\"a\" /* AddonMessageOutputAirnotifier */].invalidateUserDevices());\n                    yield this.fetchDevices();\n                }\n                finally {\n                    refresher === null || refresher === void 0 ? void 0 : refresher.complete();\n                }\n            });\n        }\n        /**\n         * Enable or disable a certain device.\n         *\n         * @param device The device object.\n         * @param enable True to enable the device, false to disable it.\n         */\n        enableDevice(device, enable) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                device.updating = true;\n                try {\n                    yield airnotifier[\"a\" /* AddonMessageOutputAirnotifier */].enableDevice(device.id, enable);\n                    // Update the list of devices since it was modified.\n                    this.updateDevicesAfterDelay();\n                }\n                catch (error) {\n                    // Show error and revert change.\n                    dom[\"a\" /* CoreDomUtils */].showErrorModal(error);\n                    device.enable = !device.enable;\n                }\n                finally {\n                    device.updating = false;\n                }\n            });\n        }\n        /**\n         * Page destroyed.\n         */\n        ngOnDestroy() {\n            // If there is a pending action to update devices, execute it right now.\n            if (this.updateTimeout) {\n                clearTimeout(this.updateTimeout);\n                this.updateDevices();\n            }\n        }\n    }\n    AddonMessageOutputAirnotifierDevicesPage.ɵfac = function AddonMessageOutputAirnotifierDevicesPage_Factory(t) { return new (t || AddonMessageOutputAirnotifierDevicesPage)(); };\n    AddonMessageOutputAirnotifierDevicesPage.ɵcmp = core[\"sc\" /* ɵɵdefineComponent */]({ type: AddonMessageOutputAirnotifierDevicesPage, selectors: [[\"page-addon-message-output-airnotifier-devices\"]], decls: 16, vars: 12, consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [\"class\", \"ion-text-wrap\", 3, \"item-current\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\"], [1, \"item-heading\"], [4, \"ngIf\"], [\"slot\", \"end\", 3, \"loading\"], [3, \"ngModel\", \"ngModelChange\"]], template: function AddonMessageOutputAirnotifierDevicesPage_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ec\" /* ɵɵelementStart */](0, \"ion-header\");\n                core[\"Ec\" /* ɵɵelementStart */](1, \"ion-toolbar\");\n                core[\"Ec\" /* ɵɵelementStart */](2, \"ion-buttons\", 0);\n                core[\"zc\" /* ɵɵelement */](3, \"ion-back-button\", 1);\n                core[\"Pc\" /* ɵɵpipe */](4, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](5, \"ion-title\");\n                core[\"Ec\" /* ɵɵelementStart */](6, \"h1\");\n                core[\"pd\" /* ɵɵtext */](7);\n                core[\"Pc\" /* ɵɵpipe */](8, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](9, \"ion-content\");\n                core[\"Ec\" /* ɵɵelementStart */](10, \"ion-refresher\", 2);\n                core[\"Mc\" /* ɵɵlistener */](\"ionRefresh\", function AddonMessageOutputAirnotifierDevicesPage_Template_ion_refresher_ionRefresh_10_listener($event) { return ctx.refreshDevices($event.target); });\n                core[\"zc\" /* ɵɵelement */](11, \"ion-refresher-content\", 3);\n                core[\"Pc\" /* ɵɵpipe */](12, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](13, \"core-loading\", 4);\n                core[\"Ec\" /* ɵɵelementStart */](14, \"ion-list\");\n                core[\"nd\" /* ɵɵtemplate */](15, AddonMessageOutputAirnotifierDevicesPage_ion_item_15_Template, 9, 11, \"ion-item\", 5);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"Vc\" /* ɵɵproperty */](\"text\", core[\"Qc\" /* ɵɵpipeBind1 */](4, 6, \"core.back\"));\n                core[\"lc\" /* ɵɵadvance */](4);\n                core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](8, 8, \"addon.messageoutput_airnotifier.processorsettingsdesc\"));\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"Vc\" /* ɵɵproperty */](\"disabled\", !ctx.devicesLoaded);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Wc\" /* ɵɵpropertyInterpolate */](\"pullingText\", core[\"Qc\" /* ɵɵpipeBind1 */](12, 10, \"core.pulltorefresh\"));\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"hideUntil\", ctx.devicesLoaded);\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"ngForOf\", ctx.devices);\n            }\n        }, directives: [ionic_angular[\"C\" /* IonHeader */], ionic_angular[\"Ab\" /* IonToolbar */], ionic_angular[\"m\" /* IonButtons */], ionic_angular[\"h\" /* IonBackButton */], ionic_angular[\"i\" /* IonBackButtonDelegate */], ionic_angular[\"yb\" /* IonTitle */], content[\"a\" /* CoreContentDirective */], ionic_angular[\"v\" /* IonContent */], ionic_angular[\"bb\" /* IonRefresher */], ionic_angular[\"cb\" /* IonRefresherContent */], loading[\"a\" /* CoreLoadingComponent */], ionic_angular[\"P\" /* IonList */], common[\"s\" /* NgForOf */], ionic_angular[\"I\" /* IonItem */], ionic_angular[\"O\" /* IonLabel */], common[\"t\" /* NgIf */], button_with_spinner[\"a\" /* CoreButtonWithSpinnerComponent */], ionic_angular[\"zb\" /* IonToggle */], ionic_angular[\"d\" /* BooleanValueAccessor */], fesm2015_forms[\"r\" /* NgControlStatus */], fesm2015_forms[\"u\" /* NgModel */]], pipes: [ngx_translate_core[\"d\" /* TranslatePipe */]], encapsulation: 2 });\n    return AddonMessageOutputAirnotifierDevicesPage;\n})();\n\n// CONCATENATED MODULE: ./src/addons/messageoutput/airnotifier/pages/devices/devices.module.ts\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\nconst routes = [\n    {\n        path: '',\n        component: devices_AddonMessageOutputAirnotifierDevicesPage,\n    },\n];\nlet devices_module_AddonMessageOutputAirnotifierDevicesPageModule = /*@__PURE__*/ (() => {\n    class AddonMessageOutputAirnotifierDevicesPageModule {\n    }\n    AddonMessageOutputAirnotifierDevicesPageModule.ɵmod = core[\"wc\" /* ɵɵdefineNgModule */]({ type: AddonMessageOutputAirnotifierDevicesPageModule });\n    AddonMessageOutputAirnotifierDevicesPageModule.ɵinj = core[\"vc\" /* ɵɵdefineInjector */]({ factory: function AddonMessageOutputAirnotifierDevicesPageModule_Factory(t) { return new (t || AddonMessageOutputAirnotifierDevicesPageModule)(); }, imports: [[\n                router[\"m\" /* RouterModule */].forChild(routes),\n                shared_module[\"a\" /* CoreSharedModule */],\n            ], router[\"m\" /* RouterModule */]] });\n    return AddonMessageOutputAirnotifierDevicesPageModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"kd\" /* ɵɵsetNgModuleScope */](devices_module_AddonMessageOutputAirnotifierDevicesPageModule, { declarations: [devices_AddonMessageOutputAirnotifierDevicesPage], imports: [router[\"m\" /* RouterModule */], shared_module[\"a\" /* CoreSharedModule */]], exports: [router[\"m\" /* RouterModule */]] }); })();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}